'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

function _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }

var path = _interopDefault(require('path'));
var fs = _interopDefault(require('fs'));
var https = _interopDefault(require('https'));
var axios = _interopDefault(require('axios'));
var lodash = require('lodash');
var qs = _interopDefault(require('qs'));
var url = require('url');

var version = "3.0.0-beta.1";

function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }

  if (info.done) {
    resolve(value);
  } else {
    Promise.resolve(value).then(_next, _throw);
  }
}

function _asyncToGenerator(fn) {
  return function () {
    var self = this,
        args = arguments;
    return new Promise(function (resolve, reject) {
      var gen = fn.apply(self, args);

      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }

      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }

      _next(undefined);
    });
  };
}

function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

function _extends() {
  _extends = Object.assign || function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];

      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }

    return target;
  };

  return _extends.apply(this, arguments);
}

function ownKeys(object, enumerableOnly) {
  var keys = Object.keys(object);

  if (Object.getOwnPropertySymbols) {
    var symbols = Object.getOwnPropertySymbols(object);
    if (enumerableOnly) symbols = symbols.filter(function (sym) {
      return Object.getOwnPropertyDescriptor(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      ownKeys(source, true).forEach(function (key) {
        _defineProperty(target, key, source[key]);
      });
    } else if (Object.getOwnPropertyDescriptors) {
      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
    } else {
      ownKeys(source).forEach(function (key) {
        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
      });
    }
  }

  return target;
}

function _objectWithoutPropertiesLoose(source, excluded) {
  if (source == null) return {};
  var target = {};
  var sourceKeys = Object.keys(source);
  var key, i;

  for (i = 0; i < sourceKeys.length; i++) {
    key = sourceKeys[i];
    if (excluded.indexOf(key) >= 0) continue;
    target[key] = source[key];
  }

  return target;
}

function _objectWithoutProperties(source, excluded) {
  if (source == null) return {};

  var target = _objectWithoutPropertiesLoose(source, excluded);

  var key, i;

  if (Object.getOwnPropertySymbols) {
    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);

    for (i = 0; i < sourceSymbolKeys.length; i++) {
      key = sourceSymbolKeys[i];
      if (excluded.indexOf(key) >= 0) continue;
      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;
      target[key] = source[key];
    }
  }

  return target;
}

/**
 * Base model
 */
class Model {
  constructor() {
    _defineProperty(this, "id", void 0);

    _defineProperty(this, "mode", void 0);

    _defineProperty(this, "resource", void 0);
  }

  /**
   * Converts a model into a plain object
   *
   * @returns {Object}
   * @public ✓ This method is part of the public API
   */
  toPlainObject() {
    return lodash.toPlainObject(this);
  }

}

/**
 * The `Chargeback` model
 *
 * {@link IChargeback}
 */
class Chargeback extends Model {
  /**
   * Chargeback constructor
   *
   * @public ✓ This method is part of the public API
   */
  constructor(props) {
    super();

    _defineProperty(this, "resource", 'chargeback');

    _defineProperty(this, "id", null);

    _defineProperty(this, "amount", null);

    _defineProperty(this, "settlementAmount", null);

    _defineProperty(this, "createdAt", null);

    _defineProperty(this, "reversedAt", null);

    _defineProperty(this, "paymentId", null);

    _defineProperty(this, "_links", {
      self: null,
      documentation: null,
      payment: null
    });

    Object.assign(this, props);
  }

}

_defineProperty(Chargeback, "resourcePrefix", 'chb_');

/**
 * Refund statuses
 *
 * @enum queued - The refund will be processed once you have enough balance. You can still cancel this refund.
 * @enum pending - The refund will be processed soon (usually the next business day). You can still cancel this refund.
 * @enum processing - The refund is being processed. Cancellation is no longer possible.
 * @enum refunded - The refund has been paid out to your customer.
 * @enum failed - The refund has failed during processing.
 */

(function (RefundStatus) {
  RefundStatus["queued"] = "queued";
  RefundStatus["pending"] = "pending";
  RefundStatus["processing"] = "processing";
  RefundStatus["refunded"] = "refunded";
  RefundStatus["failed"] = "failed";
})(exports.RefundStatus || (exports.RefundStatus = {}));

(function (RefundEmbed) {
  RefundEmbed["payment"] = "payment";
})(exports.RefundEmbed || (exports.RefundEmbed = {}));

/**
 * The `Refund` model
 *
 * {@link IRefund}
 */
class Refund extends Model {
  /**
   * Refund constructor
   *
   * @public ✓ This constructor is part of the public API
   */
  constructor(props) {
    super();

    _defineProperty(this, "resource", 'refund');

    _defineProperty(this, "id", null);

    _defineProperty(this, "amount", {
      currency: null,
      value: null
    });

    _defineProperty(this, "settlementAmount", null);

    _defineProperty(this, "description", null);

    _defineProperty(this, "status", null);

    _defineProperty(this, "createdAt", null);

    _defineProperty(this, "paymentId", null);

    _defineProperty(this, "_links", {
      payment: null,
      settlement: null,
      order: null,
      self: null,
      documentation: null
    });

    _defineProperty(this, "lines", null);

    _defineProperty(this, "_embedded", null);

    _defineProperty(this, "orderId", null);

    Object.assign(this, props);

    if (lodash.isPlainObject(this._embedded)) {
      if (Array.isArray(this._embedded.payments)) {
        // eslint-disable-next-line array-callback-return
        this._embedded.payments.map((payment, key, payments) => {
          // eslint-disable-next-line no-param-reassign
          payments[key] = new Payment(payment);
        });
      }
    }
  }
  /**
   * The refund is queued until there is enough balance to process te refund.
   * You can still cancel the refund.
   *
   * @returns {boolean}
   *
   * @public ✓ This method is part of the public API
   */


  isQueued() {
    return this.status === exports.RefundStatus.queued;
  }
  /**
   * The refund will be sent to the bank on the next business day. You can still cancel the refund.
   *
   * @public ✓ This method is part of the public API
   */


  isPending() {
    return this.status === exports.RefundStatus.pending;
  }
  /**
   * The refund has been sent to the bank. The refund amount will be transferred to the consumer
   * account as soon as possible.
   *
   * @public ✓ This method is part of the public API
   */


  isProcessing() {
    return this.status === exports.RefundStatus.processing;
  }
  /**
   * The refund amount has been transferred to the consumer.
   *
   * @public ✓ This method is part of the public API
   */


  isRefunded() {
    return this.status === exports.RefundStatus.refunded;
  }
  /**
   * The refund has failed during processing.
   *
   * @public ✓ This method is part of the public API
   */


  isFailed() {
    return this.status === exports.RefundStatus.failed;
  }

}

_defineProperty(Refund, "resourcePrefix", 're_');

/**
 * Payment Response Object.
 *
 * @param resource - Indicates the response contains a payment object.
 *                   Will always contain `payment` for this endpoint.
 * @param id - The identifier uniquely referring to this payment.
 *             Mollie assigns this identifier at payment creation time.
 *             For example `tr_7UhSN1zuXS`. Its ID will always be used
 *             by Mollie to refer to a certain payment.
 * @param mode - The mode used to create this payment. Mode determines
 *               whether a payment is real (live mode) or a test payment.
 * @param createdAt - The payment’s date and time of creation, in ISO
 *                    8601 format.
 * @param status - The payment’s status. Please refer to the documentation
 *                 regarding statuses for more info about which statuses
 *                 occur at what point.
 * @param isCancelable - Whether or not the payment can be canceled.
 * @param authorizedAt - The date and time the payment became authorized,
 *                       in ISO 8601 format. This parameter is omitted if
 *                       the payment is not authorized (yet).
 * @param paidAt - The date and time the payment became paid, in ISO 8601
 *                 format. This parameter is omitted if the payment is not
 *                 completed (yet).
 * @param canceledAt - The date and time the payment was canceled, in
 *                     ISO 8601 format. This parameter is omitted if the
 *                     payment is not canceled (yet).
 * @param expiresAt - The date and time the payment will expire, in
 *                    ISO 8601 format.
 * @param expiredAt - The date and time the payment was expired, in
 *                    ISO 8601 format. This parameter is omitted if the
 *                    payment did not expire (yet).
 * @param failedAt - The date and time the payment failed, in ISO 8601 format.
 *                   This parameter is omitted if the payment did not fail (yet).
 * @param amount - The amount of the payment, e.g. `{"currency":"EUR", "value":"100.00"}`
 *                 for a €100.00 payment.
 * @param amountRefunded - The total amount that is already refunded. Only
 *                         available when refunds are available for this payment.
 *                         For some payment methods, this amount may be higher than
 *                         the payment amount, for example to allow reimbursement of
 *                         the costs for a return shipment to the customer.
 * @param amountRemaining - The remaining amount that can be refunded. Only available
 *                          when refunds are available for this payment.
 * @param amountCaptured - The total amount that is already captured for this payment.
 *                         Only available when this payment supports captures.
 * @param description - A short description of the payment. The description is visible
 *                      in the Dashboard and will be shown on the customer’s bank or card
 *                      statement when possible.
 * @param redirectUrl - The URL your customer will be redirected to after completing or
 *                      canceling the payment process. (The URL will be `null` for
 *                      recurring payments.)`
 * @param webhookUrl - The URL Mollie will call as soon an important status change
 *                     takes place.
 * @param method - The payment method used for this payment, either forced on creation
 *                 by specifying the method parameter, or chosen by the customer on our
 *                 payment method selection screen. If the payment is only partially paid
 *                 with a gift card, the method remains `giftcard`.
 * @param metadata - The optional metadata you provided upon payment creation. Metadata
 *                   can for example be used to link an order to a payment.
 * @param locale - The customer’s locale, either forced on creation by specifying the locale
 *                 parameter, or detected by us during checkout. Will be a full locale, for
 *                 example `nl_NL`.
 * @param countryCode - This optional field contains your customer’s ISO 3166-1 alpha-2
 *                      country code, detected by us during checkout. For example: `BE`.
 *                      This field is omitted if the country code was not detected.
 * @param profileId - The identifier referring to the profile this payment was created on.
 *                    For example, `pfl_QkEhN94Ba`.
 * @param settlementAmount - This optional field will contain the amount that will be settled
 *                           to your account, converted to the currency your account is settled
 *                           in. It follows the same syntax as the amount property. Any amounts
 *                           not settled by Mollie will not be reflected in this amount,
 *                           e.g. PayPal or gift cards.
 * @param settlementId - The identifier referring to the settlement this payment was settled with.
 *                       For example, `stl_BkEjN2eBb`.
 * @param customerId - If a customer was specified upon payment creation, the customer’s token
 *                     will be available here as well. For example, `cst_XPn78q9CfT`.
 * @param sequenceType - Indicates which type of payment this is in a recurring sequence. Set to
 *                       first for first payments that allow the customer to agree to automatic
 *                       recurring charges taking place on their account in the future.
 *                       Set to recurring for payments where the customer’s card is charged
 *                       automatically. Set to `oneoff` by default, which indicates the payment
 *                       is a regular non-recurring payment.
 * @param mandateId - If the payment is a first or recurring payment, this field will hold the
 *                    ID of the mandate.
 * @param subscriptionId - When implementing the Subscriptions API, any recurring charges
 *                         resulting from the subscription will hold the ID of the subscription
 *                         that triggered the payment.
 * @param orderId - If the payment was created for an order, the ID of that order will
 *                  be part of the response.
 * @param applicationFee - The application fee, if the payment was created with one.
 * @param _links - An object with several URL objects relevant to the payment. Every URL
 *                 object will contain an `href` and a `type` field.
 *
 */

(function (PaymentStatus) {
  PaymentStatus["open"] = "open";
  PaymentStatus["canceled"] = "canceled";
  PaymentStatus["pending"] = "pending";
  PaymentStatus["authorized"] = "authorized";
  PaymentStatus["expired"] = "expired";
  PaymentStatus["failed"] = "failed";
  PaymentStatus["paid"] = "paid";
})(exports.PaymentStatus || (exports.PaymentStatus = {}));
/**
 * Gift Card
 *
 * @param issuer - The ID of the gift card brand that was used during the payment.
 * @param amount - The amount in EUR that was paid with this gift card.
 * @param voucherNumber - The voucher number, with the last four digits masked. Example: `606436353088147****`
 */

(function (PaymentEmbed) {
  PaymentEmbed["refunds"] = "refunds";
  PaymentEmbed["chargebacks"] = "chargebacks";
})(exports.PaymentEmbed || (exports.PaymentEmbed = {}));

/* eslint-disable @typescript-eslint/camelcase */

(function (Locale) {
  Locale["en_US"] = "en_US";
  Locale["nl_NL"] = "nl_NL";
  Locale["nl_BE"] = "nl_BE";
  Locale["fr_FR"] = "fr_FR";
  Locale["fr_BE"] = "fr_BE";
  Locale["de_DE"] = "de_DE";
  Locale["de_AT"] = "de_AT";
  Locale["de_CH"] = "de_CH";
  Locale["es_ES"] = "es_ES";
  Locale["ca_ES"] = "ca_ES";
  Locale["pt_PT"] = "pt_PT";
  Locale["it_IT"] = "it_IT";
  Locale["nb_NO"] = "nb_NO";
  Locale["sv_SE"] = "sv_SE";
  Locale["fi_FI"] = "fi_FI";
  Locale["da_DK"] = "da_DK";
  Locale["is_IS"] = "is_IS";
  Locale["hu_HU"] = "hu_HU";
  Locale["pl_PL"] = "pl_PL";
  Locale["lv_LV"] = "lv_LV";
  Locale["lt_LT"] = "lt_LT";
})(exports.Locale || (exports.Locale = {}));

(function (PaymentMethod) {
  PaymentMethod["applepay"] = "applepay";
  PaymentMethod["bancontact"] = "bancontact";
  PaymentMethod["banktransfer"] = "banktransfer";
  PaymentMethod["belfius"] = "belfius";
  PaymentMethod["creditcard"] = "creditcard";
  PaymentMethod["directdebit"] = "directdebit";
  PaymentMethod["eps"] = "eps";
  PaymentMethod["giftcard"] = "giftcard";
  PaymentMethod["giropay"] = "giropay";
  PaymentMethod["ideal"] = "ideal";
  PaymentMethod["inghomepay"] = "inghomepay";
  PaymentMethod["kbc"] = "kbc";
  PaymentMethod["klarnapaylater"] = "klarnapaylater";
  PaymentMethod["klarnasliceit"] = "klarnasliceit";
  PaymentMethod["paypal"] = "paypal";
  PaymentMethod["paysafecard"] = "paysafecard";
  PaymentMethod["przelewy24"] = "przelewy24";
  PaymentMethod["sofort"] = "sofort";
})(exports.PaymentMethod || (exports.PaymentMethod = {}));

(function (HistoricPaymentMethod) {
  HistoricPaymentMethod["bitcoin"] = "bitcoin";
})(exports.HistoricPaymentMethod || (exports.HistoricPaymentMethod = {}));

(function (ApiMode) {
  ApiMode["test"] = "test";
  ApiMode["live"] = "live";
})(exports.ApiMode || (exports.ApiMode = {}));

(function (SequenceType) {
  SequenceType["oneoff"] = "oneoff";
  SequenceType["first"] = "first";
  SequenceType["recurring"] = "recurring";
})(exports.SequenceType || (exports.SequenceType = {}));

/**
 * The `Payment` model
 *
 * {@link IPayment}
 */

class Payment extends Model {
  /**
   * Payment constructor
   *
   * @public ✓ This constructor is part of the public API
   */
  constructor(props) {
    super();

    _defineProperty(this, "resource", void 0);

    _defineProperty(this, "id", void 0);

    _defineProperty(this, "mode", void 0);

    _defineProperty(this, "createdAt", void 0);

    _defineProperty(this, "status", void 0);

    _defineProperty(this, "isCancelable", void 0);

    _defineProperty(this, "paidAt", void 0);

    _defineProperty(this, "canceledAt", void 0);

    _defineProperty(this, "expiresAt", void 0);

    _defineProperty(this, "expiredAt", void 0);

    _defineProperty(this, "failedAt", void 0);

    _defineProperty(this, "amount", void 0);

    _defineProperty(this, "amountRefunded", void 0);

    _defineProperty(this, "amountRemaining", void 0);

    _defineProperty(this, "description", void 0);

    _defineProperty(this, "redirectUrl", void 0);

    _defineProperty(this, "webhookUrl", void 0);

    _defineProperty(this, "method", void 0);

    _defineProperty(this, "metadata", void 0);

    _defineProperty(this, "locale", void 0);

    _defineProperty(this, "countryCode", void 0);

    _defineProperty(this, "profileId", void 0);

    _defineProperty(this, "settlementAmount", void 0);

    _defineProperty(this, "settlementId", void 0);

    _defineProperty(this, "customerId", void 0);

    _defineProperty(this, "sequenceType", void 0);

    _defineProperty(this, "mandateId", void 0);

    _defineProperty(this, "subscriptionId", void 0);

    _defineProperty(this, "applicationFee", void 0);

    _defineProperty(this, "details", void 0);

    _defineProperty(this, "_links", void 0);

    _defineProperty(this, "_embedded", null);

    _defineProperty(this, "amountCaptured", null);

    _defineProperty(this, "orderId", null);

    Object.assign(this, props);

    if (lodash.isPlainObject(this._embedded)) {
      if (Array.isArray(this._embedded.refunds)) {
        this._embedded.refunds.forEach((refund, key, refunds) => {
          // eslint-disable-next-line no-param-reassign
          refunds[key] = new Refund(refund);
        });
      }

      if (Array.isArray(this._embedded.chargebacks)) {
        this._embedded.chargebacks.forEach((chargeback, key, chargebacks) => {
          // eslint-disable-next-line no-param-reassign
          chargebacks[key] = new Chargeback(chargeback);
        });
      }
    }
  }
  /**
   * If the payment is open
   *
   * @public ✓ This method is part of the public API
   */


  isOpen() {
    return this.status === exports.PaymentStatus.open;
  }
  /**
   * If the payment is authorized
   *
   * @public ✓ This method is part of the public API
   */


  isAuthorized() {
    return this.status === exports.PaymentStatus.authorized;
  }
  /**
   * If the payment is paid
   *
   * @public ✓ This method is part of the public API
   */


  isPaid() {
    return !!this.paidAt;
  }
  /**
   * If the payment is canceled
   *
   * @public ✓ This method is part of the public API
   */


  isCanceled() {
    return this.status == exports.PaymentStatus.canceled;
  }
  /**
   * If the payment is expired
   *
   * @public ✓ This method is part of the public API
   */


  isExpired() {
    return this.status == exports.PaymentStatus.expired;
  }
  /**
   * If the payment is refundable
   *
   * @public ✓ This method is part of the public API
   *
   * @since 2.0.0-rc.2
   */


  isRefundable() {
    return this.amountRemaining !== null;
  }
  /**
   * Get the payment URL
   *
   * @public ✓ This method is part of the public API
   */


  getPaymentUrl() {
    return lodash.get(this._links, 'checkout.href', null);
  }
  /**
   * Returns whether the payment has failed and cannot be completed with a different payment method.
   *
   * @public ✓ This method is part of the public API
   */


  isFailed() {
    return this.status == exports.PaymentStatus.failed;
  }
  /**
   * Returns whether the payment is in this temporary status that can occur when the actual payment process has been
   * started, but has not completed yet.
   *
   * @public ✓ This method is part of the public API
   */


  isPending() {
    return this.status == exports.PaymentStatus.pending;
  }
  /**
   * Returns whether there are refunds which belong to the payment.
   *
   * @public ✓ This method is part of the public API
   */


  hasRefunds() {
    return this._links.refunds != undefined;
  }
  /**
   * Returns whether there are chargebacks which belong to the payment.
   *
   * @public ✓ This method is part of the public API
   */


  hasChargebacks() {
    return this._links.chargebacks != undefined;
  }
  /**
   * Returns whether `sequenceType` is set to `'first'`. If a `'first'` payment has been completed successfully, the
   * consumer's account may be charged automatically using recurring payments.
   *
   * @public ✓ This method is part of the public API
   */


  hasSequenceTypeFirst() {
    return this.sequenceType == exports.SequenceType.first;
  }
  /**
   * Returns whether `sequenceType` is set to `'recurring'`. This type of payment is processed without involving the
   * consumer.
   *
   * @public ✓ This method is part of the public API
   */


  hasSequenceTypeRecurring() {
    return this.sequenceType == exports.SequenceType.recurring;
  }
  /**
   * Returns the URL your customer should visit to make the payment. This is where you should redirect the consumer to.
   *
   * Recurring payments don’t have a checkout URL.
   *
   * @public ✓ This method is part of the public API
   */


  getCheckoutUrl() {
    if (this._links.checkout == undefined) {
      return null;
    }

    return this._links.checkout.href;
  }
  /**
   * @public ✓ This method is part of the public API
   */


  canBeRefunded() {
    return this.amountRemaining != undefined;
  }
  /**
   * @public ✓ This method is part of the public API
   */


  canBePartiallyRefunded() {
    return this.canBeRefunded();
  }
  /**
   * Returns the total amount that is already refunded. For some payment methods, this amount may be higher than the
   * payment amount, for example to allow reimbursement of the costs for a return shipment to the customer.
   *
   * @public ✓ This method is part of the public API
   */


  getAmountRefunded() {
    if (this.amountRefunded == undefined) {
      return {
        // Perhaps this zero-value should depend on the currency. If the currency is JPY (¥), for instance, the value
        // should probably be "0"; not "0.00".
        value: '0.00',
        currency: this.amount.currency
      };
    }

    return this.amountRefunded;
  }
  /**
   * Returns the remaining amount that can be refunded.
   *
   * @public ✓ This method is part of the public API
   */


  getAmountRemaining() {
    if (this.amountRemaining == undefined) {
      return {
        // Perhaps this zero-value should depend on the currency. If the currency is JPY (¥), for instance, the value
        // should probably be "0"; not "0.00".
        value: '0.00',
        currency: this.amount.currency
      };
    }

    return this.amountRemaining;
  }

}

_defineProperty(Payment, "resourcePrefix", 'tr_');

/**
 * A list helper class
 */
class List extends Array {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "links", null);

    _defineProperty(this, "count", null);

    _defineProperty(this, "nextPage", null);

    _defineProperty(this, "previousPage", null);

    _defineProperty(this, "nextPageCursor", null);

    _defineProperty(this, "previousPageCursor", null);
  }

  static getNextPageParams(links) {
    const href = lodash.get(links, 'next.href');

    if (href != undefined) {
      return url.parse(href, true).query;
    }

    return {};
  }

  static getPreviousPageParams(links) {
    const href = lodash.get(links, 'previous.href');

    if (href != undefined) {
      return url.parse(href, true).query;
    }

    return {};
  }

  static buildResourceList({
    response,
    resourceName,
    params,
    callback,
    getResources,
    Model
  }) {
    const {
      _embedded,
      count,
      _links
    } = response;
    const resources = _embedded[resourceName];
    const list = new List();
    list.links = _links;
    list.count = count;
    list.nextPage =
    /*#__PURE__*/
    _asyncToGenerator(function* () {
      return getResources(_objectSpread2({}, params, {}, List.getNextPageParams(_links)), callback);
    });
    list.previousPage =
    /*#__PURE__*/
    _asyncToGenerator(function* () {
      return getResources(_objectSpread2({}, params, {}, List.getPreviousPageParams(_links)), callback);
    });
    list.nextPageCursor = List.getNextPageParams(_links).from;
    list.previousPageCursor = List.getPreviousPageParams(_links).from;
    list.push(...resources.map(resource => new Model(resource)));
    return list;
  }

}

/**
 * @since 3.0.0
 */
class ApiError extends Error {
  constructor(message, title, status, field, links) {
    super(message);

    _defineProperty(this, "title", void 0);

    _defineProperty(this, "status", void 0);

    _defineProperty(this, "field", void 0);

    _defineProperty(this, "links", void 0);

    this.name = 'ApiError';
    this.title = title;
    this.status = status;
    this.field = field;
    this.links = links;
  }
  /**
   * Get the error message
   *
   * @returns The error message
   *
   * @since 3.0.0
   *
   * @public ✓ This method is part of the public API
   */


  getMessage() {
    return this.message;
  }
  /**
   * Get the field name that contains an error
   *
   * @returns The error field
   *
   * @since 3.0.0
   *
   * @public ✓ This method is part of the public API
   */


  getField() {
    return this.field;
  }
  /**
   * Get the API status code
   *
   * @returns The status code
   *
   * @since 3.0.0
   *
   * @public ✓ This method is part of the public API
   */


  getStatusCode() {
    return this.status;
  }
  /**
   * Get the documentation URL
   *
   * @returns The documentation URL
   *
   * @since 3.0.0
   *
   * @public ✓ This method is part of the public API
   */


  getDocumentationUrl() {
    return this.getUrl('documentation');
  }
  /**
   * Get the dashboard URL
   *
   * @returns The dashboard URL
   *
   * @since 3.0.0
   *
   * @public ✓ This method is part of the public API
   */


  getDashboardUrl() {
    return this.getUrl('dashboard');
  }
  /**
   * Check if the link exists
   *
   * @param key - Link name
   *
   * @returns Whether the link exists
   *
   * @since 3.0.0
   *
   * @public ✓ This method is part of the public API
   */


  hasLink(key) {
    return lodash.has(this.links, key);
  }
  /***
   * Retrieve a link by name
   *
   * @param key - The link name
   *
   * @returns A link to the resource
   *
   * @since 3.0.0
   *
   * @public ✓ This method is part of the public API
   */


  getLink(key) {
    return lodash.get(this.links, key);
  }
  /**
   *
   * @param {string} key
   *
   * @returns {string}
   *
   * @since 3.0.0
   *
   * @public ✓ This method is part of the public API
   */


  getUrl(key) {
    return lodash.get(this.getLink(key), 'href');
  }

  toString() {
    return `ApiError: ${this.message}`;
  }
  /**
   * Create an `ApiError` from a raw error format
   *
   * @param error - A raw Mollie API error
   *
   * @returns A new `ApiError`
   *
   * @since 3.0.0
   */


  static createFromResponse(error) {
    return new ApiError(lodash.get(error, 'detail'), lodash.get(error, 'title'), lodash.get(error, 'status'), lodash.get(error, 'field'), lodash.cloneDeep(lodash.get(error, '_links')));
  }

}

/**
 * @deprecated since 3.0.0
 */

/**
 * The base resource
 */
class Resource {
  /**
   * Resource code such as `payments`
   * @var {string} resource
   */

  /**
   * Refers to a Model class
   * @var {Model} model
   */

  /**
   * @var {string} apiName
   */

  /**
   * @var {string} resourcePrefix
   */

  /**
   * @var {AxiosInstance} httpClient
   */

  /**
   * @var {string} parentId
   */

  /**
   * Constructor
   */
  constructor(httpClient) {
    _defineProperty(this, "apiName", void 0);

    _defineProperty(this, "resourcePrefix", void 0);

    _defineProperty(this, "httpClient", void 0);

    _defineProperty(this, "parentId", void 0);

    this.httpClient = httpClient;
  }
  /**
   * Creates an API error, based on the passed response.
   *
   * This method throws an error if the passed callback is falsy. It calls the passed callback providing the error
   * otherwise, and then throws the error nevertheless.
   *
   * In other words, this method calls the passed callback ‒ if any ‒ providing the error it creates, and then (always)
   * throws said error.
   */


  static createApiError(responseOrMessage, cb) {
    // This method is essentially a thin wrapper around either the ApiError constructor or ApiError.createFromResponse.
    // When we implement a more generic solution for the callbacks, I think this method becomes obsolete.
    var error;

    if (typeof responseOrMessage == 'string') {
      error = new ApiError(responseOrMessage);
    } else {
      // if (typeof responseOrMessage == 'object')
      error = ApiError.createFromResponse(responseOrMessage.data);
    }

    if (cb) {
      cb(error);
    }

    throw error;
  }
  /**
   * Set the parent ID by providing the parent
   *
   * @since 1.1.1
   *
   * @deprecated 2.0.0. This method is not supported by the v2 API.
   */


  withParent(parent) {
    if (parent && parent.id) {
      this.setParentId(parent.id);
    }

    return this;
  }
  /**
   * Create a resource by ID
   *
   * @params params - Resource-specific parameters
   * @params cb - (DEPRECATED SINCE 3.0.0) Callback function, can be used instead of the returned Promise
   *
   * @returns The resource
   *
   * @since 1.0.0
   *
   * @public ✓ This method is part of the public API
   */


  create(prms, cb) {
    var _this = this;

    return _asyncToGenerator(function* () {
      const params = lodash.cloneDeep(prms);
      const callback = typeof params === 'function' ? params : cb;
      const query = {};

      if (lodash.isPlainObject(params)) {
        if (typeof params.include === 'string' || Array.isArray(params.include)) {
          query.include = Array.isArray(params.include) ? params.include.join(';') : params.include;
          delete params.include;
        }

        if (typeof params.embed === 'string' || Array.isArray(params.embed)) {
          query.embed = Array.isArray(params.embed) ? params.embed.join(';') : params.embed;
          delete params.embed;
        }
      }

      try {
        const response = yield _this.getClient().post(`${_this.getResourceUrl()}${qs.stringify(query, {
          addQueryPrefix: true
        })}`, params); // noinspection JSPotentiallyInvalidConstructorUsage

        const model = new _this.constructor.model(response.data); // TODO If the passed callback throws an error, it will actually be caught here. This is probably not what we
        // want (especially since it will probably not have a response property).

        if (callback) {
          return callback(null, model);
        }

        return model;
      } catch (error) {
        Resource.createApiError(error.response, callback);
      }
    })();
  }
  /**
   * Get a resource by ID
   *
   * @params id - Resource ID
   * @params params - Resource-specific parameters
   * @params cb - (DEPRECATED SINCE 3.0.0) Optional callback function
   *
   * @returns {Promise<Model>}
   *
   * @since 1.0.0
   */


  get(id, prms, cb) {
    var _this2 = this;

    return _asyncToGenerator(function* () {
      const params = lodash.cloneDeep(prms);
      const callback = typeof params === 'function' ? params : cb;
      const query = {};

      if (lodash.isPlainObject(params)) {
        if (typeof params.include === 'string' || Array.isArray(params.include)) {
          query.include = Array.isArray(params.include) ? params.include.join(';') : params.include;
          delete params.include;
        }

        if (typeof params.embed === 'string' || Array.isArray(params.embed)) {
          query.embed = Array.isArray(params.embed) ? params.embed.join(';') : params.embed;
          delete params.embed;
        }
      }

      try {
        const response = yield _this2.getClient().get(`${_this2.getResourceUrl()}/${id}${qs.stringify(query, {
          addQueryPrefix: true
        })}`); // noinspection JSPotentiallyInvalidConstructorUsage

        const model = new _this2.constructor.model(response.data);

        if (callback) {
          return callback(null, model);
        }

        return model;
      } catch (error) {
        Resource.createApiError(error.response, callback);
      }
    })();
  }
  /**
   * List resources
   *
   * @param prms - Resource-specific parameters
   * @param cb - (DEPRECATED SINCE 3.0.0) Optional callback function
   *
   * @returns Resource list
   *
   * @since 1.0.0
   */


  list(prms, cb) {
    var _this3 = this;

    return _asyncToGenerator(function* () {
      const params = lodash.cloneDeep(prms);

      try {
        const query = {};

        if (lodash.isPlainObject(params)) {
          if (typeof params.include === 'string' || Array.isArray(params.include)) {
            query.include = Array.isArray(params.include) ? params.include.join(';') : params.include;
            delete params.include;
          }

          if (typeof params.embed === 'string' || Array.isArray(params.embed)) {
            query.embed = Array.isArray(params.embed) ? params.embed.join(';') : params.embed;
            delete params.embed;
          }

          if (typeof params.limit === 'number' || typeof params.limit === 'string') {
            query.limit = params.limit;
            delete params.limit;
          }

          if (typeof params.from === 'string') {
            query.from = params.from;
            delete params.from;
          }
        }

        const response = yield _this3.getClient().get(`${_this3.getResourceUrl()}${qs.stringify(query, {
          addQueryPrefix: true
        })}`);

        const resourceName = _this3.getResourceName();

        const list = List.buildResourceList({
          response: response.data,
          resourceName,
          params,
          callback: cb,
          getResources: _this3.list.bind(_this3),
          Model: _this3.constructor.model
        });

        if (typeof cb === 'function') {
          cb(null, list);
        }

        return list;
      } catch (error) {
        Resource.createApiError(error.response, cb);
      }
    })();
  }
  /**
   * Update a resource by ID
   *
   * @param id - Resource id
   * @param params - Resource-specific parameters
   * @param cb - (DEPRECATED SINCE 3.0.0) Optional callback function
   *
   * @returns {Promise<Model>}
   *
   * @since 1.0.0
   */


  update(id, params, cb) {
    var _this4 = this;

    return _asyncToGenerator(function* () {
      try {
        const response = yield _this4.getClient().patch(`${_this4.getResourceUrl()}/${id}`, params); // noinspection JSPotentiallyInvalidConstructorUsage

        const model = new _this4.constructor.model(response.data);

        if (typeof cb === 'function') {
          cb(null, model);
        }

        return model;
      } catch (error) {
        Resource.createApiError(error.response, cb);
      }
    })();
  }
  /**
   * Delete a resource by ID
   *
   * @param id - Resource ID
   * @param params - Resource-specific parameters
   * @param cb - (DEPRECATED SINCE 3.0.0) Optional callback function
   *
   * @returns In case the API returns the updated object it we'll return a Model.
   *          In other cases the API should respond with `204 No Content`. This is translated
   *          to a boolean value with `true` meaning the correct `204 No Content` response was given.
   *
   * @since 1.0.0
   */


  delete(id, params, cb) {
    var _this5 = this;

    return _asyncToGenerator(function* () {
      try {
        const response = yield _this5.getClient().delete(`${_this5.getResourceUrl()}/${id}`);
        let model;

        if (response.status !== 204) {
          model = new _this5.constructor.model(response.data);
        } else {
          model = true;
        }

        if (cb) {
          cb(null, model);
        }

        return model;
      } catch (error) {
        Resource.createApiError(error.response, cb);
      }
    })();
  }
  /**
   * Get the HTTP client
   *
   * @since 2.0.0
   */


  getClient() {
    return this.httpClient;
  }
  /**
   * Set the parent ID
   *
   * @since 2.0.0
   */


  setParentId(parentId) {
    this.parentId = parentId;
  }
  /**
   * If the parent ID is set
   *
   * @since 2.0.0
   */


  hasParentId() {
    return !!this.parentId;
  }
  /**
   * Create a resource URL with the parent ID
   *
   * @since 2.0.0
   */


  getResourceUrl() {
    if (this.constructor.resource.indexOf('_') !== -1) {
      const parts = this.constructor.resource.split('_');
      return `${parts[0]}/${this.parentId}/${parts[1]}`;
    }

    return this.constructor.resource;
  }
  /**
   * Get the resource name from the resource identifier
   *
   * @since 2.0.0-rc.2
   */


  getResourceName() {
    // Instantiate the model to get the defaults
    if (this.constructor.resource.includes('_')) {
      return this.constructor.resource.split('_')[1];
    }

    return this.constructor.resource;
  }

}

_defineProperty(Resource, "resource", void 0);

_defineProperty(Resource, "model", void 0);

/**
 * Payments base resource
 */

class PaymentsBaseResource extends Resource {
  setParentId(parentId) {
    super.setParentId(parentId);
  }
  /**
   * Set the parent
   *
   * @since 2.0.0
   *
   * @deprecated 3.0.0 Please use setParentId instead
   */


  setParent(params = {}) {
    if (!params.paymentId && !this.hasParentId()) {
      throw new TypeError('Missing parameter "paymentId".');
    } else if (params.paymentId) {
      this.setParentId(params.paymentId);
    }
  }

}

/**
 * @since 3.0.0
 */
class NotImplementedError extends Error {
  constructor(message, apiName) {
    super(message);

    _defineProperty(this, "apiName", void 0);

    this.apiName = apiName;
  }

}

/**
 * The `payments` resource
 */

class PaymentsResource extends PaymentsBaseResource {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "apiName", 'Payments API');

    _defineProperty(this, "all", this.list);

    _defineProperty(this, "page", this.list);

    _defineProperty(this, "delete", this.cancel);
  }

  /**
   * Create a payment in Mollie.
   *
   * @param params - Create Payment parameters
   * @param cb - (DEPRECATED SINCE 3.0.0) Callback function, can be used instead of the returned `Promise` object
   *
   * @returns {Promise<Payment>}
   *
   * @since 2.0.0
   *
   * @see https://docs.mollie.com/reference/v2/payments-api/create-payment
   *
   * @public ✓ This method is part of the public API
   */
  create(params, cb) {
    var _superprop_callCreate = (..._args) => super.create(..._args);

    return _asyncToGenerator(function* () {
      return _superprop_callCreate(params, cb);
    })();
  }
  /**
   * Retrieve a single payment from Mollie.
   *
   * @param id - Payment ID
   * @param params - Retrieve Payment parameters
   *                 (DEPRECATED SINCE 3.0.0) Can also be a callback function
   * @param cb - (DEPRECATED SINCE 3.0.0) Callback function, can be used instead of the returned `Promise` object
   *
   * @returns The found Payment object
   *
   * @since 2.0.0
   *
   * @see https://docs.mollie.com/reference/v2/payments-api/get-payment
   *
   * @public ✓ This method is part of the public API
   */


  get(id, params, cb) {
    var _superprop_callGet = (..._args2) => super.get(..._args2);

    return _asyncToGenerator(function* () {
      // Using callbacks (DEPRECATED SINCE 3.0.0)
      if (typeof params === 'function' || typeof cb === 'function') {
        if (!lodash.startsWith(id, Payment.resourcePrefix)) {
          Resource.createApiError('The payment id is invalid', typeof params === 'function' ? params : cb);
        }

        return _superprop_callGet(id, typeof params === 'function' ? null : params, typeof params === 'function' ? params : cb);
      }

      if (!lodash.startsWith(id, Payment.resourcePrefix)) {
        Resource.createApiError('The payment id is invalid');
      }

      return _superprop_callGet(id, params, cb);
    })();
  }
  /**
   * Retrieve all payments created with the current website profile, ordered from newest to oldest.
   *
   * @param params - List parameters
   *                 (DEPRECATED SINCE 3.0.0) Can also be a callback function
   * @param cb - (DEPRECATED SINCE 3.0.0) Callback function, can be used instead of the returned `Promise` object
   *
   * @returns A list of found Payments
   *
   * @since 3.0.0
   *
   * @see https://docs.mollie.com/reference/v2/payments-api/list-payments
   *
   * @public ✓ This method is part of the public API
   */


  list(params, cb) {
    var _superprop_callList = (..._args3) => super.list(..._args3);

    return _asyncToGenerator(function* () {
      // Using callbacks (DEPRECATED SINCE 3.0.0)
      if (typeof params === 'function' || typeof cb === 'function') {
        return _superprop_callList(typeof params === 'function' ? null : params, typeof params === 'function' ? params : cb);
      }

      return _superprop_callList(params);
    })();
  }
  /**
   * Cancel the given payment.
   *
   * Will throw an ApiError if the payment id is invalid or the resource cannot be found.
   * Returns with HTTP status No Content (204) if successful.
   *
   * @param id - Payment Id
   * @param params - Cancel Payment parameters
   * @param cb - (DEPRECATED SINCE 3.0.0) Callback function, can be used instead of the returned `Promise` object
   *
   * @returns The updated Payment object
   *
   * @since 2.0.0
   *
   * @see https://docs.mollie.com/reference/v2/payments-api/cancel-payment
   *
   * @public ✓ This method is part of the public API
   */


  cancel(id, params, cb) {
    var _superprop_callDelete = (..._args4) => super.delete(..._args4);

    return _asyncToGenerator(function* () {
      if (!lodash.startsWith(id, Payment.resourcePrefix)) {
        Resource.createApiError('The payment id is invalid', typeof params === 'function' ? params : cb);
      }

      return _superprop_callDelete(id, typeof params === 'function' ? params : cb);
    })();
  }
  /**
   * @deprecated 2.0.0. This method is not supported by the v2 API.
   */


  update() {
    var _this = this;

    return _asyncToGenerator(function* () {
      throw new NotImplementedError('This method does not exist', _this.apiName);
    })();
  }

}

_defineProperty(PaymentsResource, "resource", 'payments');

_defineProperty(PaymentsResource, "model", Payment);

/**
 * The `payments_refunds` resource
 *
 * @since 1.1.1
 */

class PaymentsRefundsResource extends PaymentsBaseResource {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "apiName", 'Refunds API');

    _defineProperty(this, "all", this.list);

    _defineProperty(this, "page", this.list);

    _defineProperty(this, "delete", this.cancel);
  }

  /**
   * Create a payment refund
   *
   * @param params - Create Payment Refund parameters
   * @param cb - (DEPRECATED SINCE 3.0.0) Callback function, can be used instead of the returned `Promise` object
   *
   * @returns The newly create Payment Refund
   *
   * @since 1.1.1
   *
   * @see https://docs.mollie.com/reference/v2/refunds-api/create-refund
   *
   * @public ✓ This method is part of the public API
   */
  create(params, cb) {
    var _this = this,
        _superprop_callCreate = (..._args) => super.create(..._args);

    return _asyncToGenerator(function* () {
      // defaults for .withParent() compatibility (DEPRECATED SINCE 3.0.0)
      const _defaults = lodash.defaults(params, {
        paymentId: _this.parentId
      }),
            {
        paymentId
      } = _defaults,
            parameters = _objectWithoutProperties(_defaults, ["paymentId"]);

      if (!lodash.startsWith(paymentId, Payment.resourcePrefix)) {
        Resource.createApiError('The payment id is invalid', cb);
      }

      _this.setParentId(paymentId);

      return _superprop_callCreate(parameters, cb);
    })();
  }
  /**
   * Get a payment refund by ID
   *
   * @param id - Refund ID
   * @param params - Retrieve Payment Refund parameters
   *                 (DEPRECATED SINCE 3.0.0) Can also be a callback function
   * @param cb - (DEPRECATED SINCE 3.0.0) Callback function, can be used instead of the returned `Promise` object
   *
   * @since 1.1.1
   *
   * @see https://docs.mollie.com/reference/v2/refunds-api/get-refund
   *
   * @public ✓ This method is part of the public API
   */


  get(id, params, cb) {
    var _this2 = this,
        _superprop_callGet = (..._args2) => super.get(..._args2);

    return _asyncToGenerator(function* () {
      // Using callbacks (DEPRECATED SINCE 3.0.0)
      if (typeof params === 'function' || typeof cb === 'function') {
        if (!lodash.startsWith(id, Refund.resourcePrefix)) {
          Resource.createApiError('The payments_refund id is invalid', typeof params === 'function' ? params : cb);
        }

        const paymentId = lodash.get(params, 'paymentId') || _this2.parentId;

        if (!lodash.startsWith(paymentId, Payment.resourcePrefix)) {
          Resource.createApiError('The payment id is invalid', typeof params === 'function' ? params : cb);
        }

        _this2.setParentId(paymentId);

        return _superprop_callGet(id, typeof params === 'function' ? null : params, typeof params === 'function' ? params : cb);
      }

      if (!lodash.startsWith(id, Refund.resourcePrefix)) {
        Resource.createApiError('The payments_refund id is invalid', cb);
      } // defaults for .withParent() compatibility (DEPRECATED SINCE 3.0.0)


      const _defaults2 = lodash.defaults(params, {
        paymentId: _this2.parentId
      }),
            {
        paymentId
      } = _defaults2,
            parameters = _objectWithoutProperties(_defaults2, ["paymentId"]);

      if (!lodash.startsWith(paymentId, Payment.resourcePrefix)) {
        Resource.createApiError('The payment id is invalid', cb);
      }

      _this2.setParentId(paymentId);

      return _superprop_callGet(id, parameters, cb);
    })();
  }
  /**
   * Get all payment refunds.
   *
   * @param params - List Payment Refunds parameters
   *                 (DEPRECATED SINCE 3.0.0) Can also be a callback function
   * @param cb - (DEPRECATED SINCE 3.0.0) Callback function, can be used instead of the returned `Promise` object
   *
   * @since 3.0.0
   *
   * @see https://docs.mollie.com/reference/v2/refunds-api/list-refunds
   *
   * @public ✓ This method is part of the public API
   */


  list(params, cb) {
    var _this3 = this,
        _superprop_callList = (..._args3) => super.list(..._args3);

    return _asyncToGenerator(function* () {
      // Using callbacks (DEPRECATED SINCE 3.0.0)
      if (typeof params === 'function' || typeof cb === 'function') {
        const paymentId = lodash.get(params, 'paymentId') || _this3.parentId;

        if (!lodash.startsWith(paymentId, Payment.resourcePrefix)) {
          Resource.createApiError('The payment id is invalid', typeof params === 'function' ? params : cb);
        }

        _this3.setParentId(paymentId);

        return _superprop_callList(typeof params === 'function' ? null : params, typeof params === 'function' ? params : cb);
      } // defaults for .withParent() compatibility (DEPRECATED SINCE 3.0.0)


      const _defaults3 = lodash.defaults(params, {
        paymentId: _this3.parentId
      }),
            {
        paymentId
      } = _defaults3,
            parameters = _objectWithoutProperties(_defaults3, ["paymentId"]);

      if (!lodash.startsWith(paymentId, Payment.resourcePrefix)) {
        Resource.createApiError('The payment id is invalid');
      }

      _this3.setParentId(paymentId);

      return _superprop_callList(parameters, cb);
    })();
  }
  /**
   * Cancel a payment refund by ID
   *
   * @param id - Refund ID
   * @param params - Cancel payment refund parameters
   *                 (DEPRECATED SINCE 3.0.0) Can also be a callback function
   * @param cb - (DEPRECATED SINCE 3.0.0) Callback function, can be used instead of the returned `Promise` object
   *
   * @return Success status
   *
   * @since 1.1.1
   *
   * @see https://docs.mollie.com/reference/v2/refunds-api/cancel-refund
   *
   * @public ✓ This method is part of the public API
   */


  cancel(id, params, cb) {
    var _this4 = this,
        _superprop_callDelete = (..._args4) => super.delete(..._args4);

    return _asyncToGenerator(function* () {
      // Using callbacks (DEPRECATED SINCE 3.0.0)
      if (typeof params === 'function' || typeof cb === 'function') {
        if (!lodash.startsWith(id, Refund.resourcePrefix)) {
          Resource.createApiError('The payments_refund id is invalid', typeof params === 'function' ? params : cb);
        }

        const paymentId = lodash.get(params, 'paymentId') || _this4.parentId;

        if (!lodash.startsWith(paymentId, Payment.resourcePrefix)) {
          Resource.createApiError('The payment id is invalid', typeof params === 'function' ? params : cb);
        }

        return _superprop_callDelete(id, typeof params === 'function' ? null : params, typeof params === 'function' ? params : cb);
      }

      if (!lodash.startsWith(id, Refund.resourcePrefix)) {
        Resource.createApiError('The payments_refund id is invalid');
      } // defaults for .withParent() compatibility (DEPRECATED SINCE 3.0.0)


      const _defaults4 = lodash.defaults(params, {
        paymentId: _this4.parentId
      }),
            {
        paymentId
      } = _defaults4,
            parameters = _objectWithoutProperties(_defaults4, ["paymentId"]);

      if (!lodash.startsWith(paymentId, Payment.resourcePrefix)) {
        Resource.createApiError('The payment id is invalid');
      }

      _this4.setParentId(paymentId);

      return _superprop_callDelete(id, parameters, cb);
    })();
  }
  /**
   * @deprecated 2.0.0. This method is not supported by the v2 API.
   */


  update() {
    var _this5 = this;

    return _asyncToGenerator(function* () {
      throw new NotImplementedError('This method does not exist', _this5.apiName);
    })();
  }

}

_defineProperty(PaymentsRefundsResource, "resource", 'payments_refunds');

_defineProperty(PaymentsRefundsResource, "model", Refund);

/**
 * The `payments_chargebacks` resource
 *
 * @since 1.1.1
 */

class PaymentsChargebacksResource extends PaymentsBaseResource {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "apiName", 'Chargebacks API');

    _defineProperty(this, "all", this.list);

    _defineProperty(this, "page", this.list);
  }

  /**
   * Get a Payment Chargeback by ID
   *
   * @param id - Chargeback ID
   * @param params - Get Payment Chargeback parameters
   *                 (DEPRECATED SINCE 3.0.0) Can also be a callback function
   * @param cb - (DEPRECATED SINCE 3.0.0) Callback function, can be used instead of the returned `Promise` object
   *
   * @returns The found Payment Chargeback object
   *
   * @since 1.1.1
   *
   * @see https://docs.mollie.com/reference/v2/chargebacks-api/get-chargeback
   *
   * @public ✓ This method is part of the public API
   */
  get(id, params, cb) {
    var _this = this,
        _superprop_callGet = (..._args) => super.get(..._args);

    return _asyncToGenerator(function* () {
      // Using callbacks (DEPRECATED SINCE 3.0.0)
      if (typeof params === 'function' || typeof cb === 'function') {
        const paymentId = lodash.get(params, 'paymentId') || _this.parentId;

        if (!lodash.startsWith(id, Chargeback.resourcePrefix)) {
          Resource.createApiError('The chargeback id is invalid', typeof params === 'function' ? params : cb);
        }

        if (!lodash.startsWith(paymentId, Payment.resourcePrefix)) {
          Resource.createApiError('The payment id is invalid', typeof params === 'function' ? params : cb);
        }

        _this.setParentId(paymentId);

        return _superprop_callGet(id, typeof params === 'function' ? null : params, typeof params === 'function' ? params : cb);
      } // defaults for .withParent() compatibility (DEPRECATED SINCE 3.0.0)


      const _defaults = lodash.defaults(params, {
        paymentId: _this.parentId
      }),
            {
        paymentId
      } = _defaults,
            parameters = _objectWithoutProperties(_defaults, ["paymentId"]);

      if (!lodash.startsWith(id, Chargeback.resourcePrefix)) {
        Resource.createApiError('The chargeback id is invalid');
      }

      if (!lodash.startsWith(paymentId, Payment.resourcePrefix)) {
        Resource.createApiError('The payment id is invalid');
      }

      _this.setParentId(paymentId);

      return _superprop_callGet(id, parameters, cb);
    })();
  }
  /**
   * Retrieve a list of Payment Chargebacks
   *
   * @param params - Retrieve Payment Chargebacks list parameters
   * @param cb - Callback function, can be used instead of the returned `Promise` object
   *
   * @returns A list of found Payment Chargebacks
   *
   * @since 3.0.0
   *
   * @see https://docs.mollie.com/reference/v2/chargebacks-api/list-chargebacks
   *
   * @public ✓ This method is part of the public API
   */


  list(params, cb) {
    var _this2 = this,
        _superprop_callList = (..._args2) => super.list(..._args2);

    return _asyncToGenerator(function* () {
      // Using callbacks (DEPRECATED SINCE 3.0.0)
      if (typeof params === 'function' || typeof cb === 'function') {
        const paymentId = lodash.get(params, 'paymentId') || _this2.parentId;

        if (!lodash.startsWith(paymentId, Payment.resourcePrefix)) {
          Resource.createApiError('The payment id is invalid', typeof params === 'function' ? params : cb);
        }

        _this2.setParentId(paymentId);

        return _superprop_callList(typeof params === 'function' ? null : params, typeof params === 'function' ? params : cb);
      } // defaults for .withParent() compatibility (DEPRECATED SINCE 3.0.0)


      const _defaults2 = lodash.defaults(params, {
        paymentId: _this2.parentId
      }),
            {
        paymentId
      } = _defaults2,
            parameters = _objectWithoutProperties(_defaults2, ["paymentId"]);

      if (!lodash.startsWith(paymentId, Payment.resourcePrefix)) {
        Resource.createApiError('The payment id is invalid');
      }

      _this2.setParentId(paymentId);

      return _superprop_callList(parameters, cb);
    })();
  }
  /**
   * @deprecated 2.0.0. This method is not supported by the v2 API.
   */


  create() {
    var _this3 = this;

    return _asyncToGenerator(function* () {
      throw new NotImplementedError('This method does not exist', _this3.apiName);
    })();
  }
  /**
   * @deprecated 2.0.0. This method is not supported by the v2 API.
   */


  update() {
    var _this4 = this;

    return _asyncToGenerator(function* () {
      throw new NotImplementedError('This method does not exist', _this4.apiName);
    })();
  }
  /**
   * @deprecated 2.0.0. This method is not supported by the v2 API.
   */


  cancel() {
    var _this5 = this;

    return _asyncToGenerator(function* () {
      throw new NotImplementedError('This method does not exist', _this5.apiName);
    })();
  }
  /**
   * @deprecated 2.0.0. This method is not supported by the v2 API.
   */


  delete() {
    var _this6 = this;

    return _asyncToGenerator(function* () {
      throw new NotImplementedError('This method does not exist', _this6.apiName);
    })();
  }

}

_defineProperty(PaymentsChargebacksResource, "resource", 'payments_chargebacks');

_defineProperty(PaymentsChargebacksResource, "model", Chargeback);

/**
 * Method Response object.
 *
 * @param resource - Indicates the response contains a method object. Will always contain `method` for this endpoint.
 * @param id - The unique identifier of the payment method. When used during payment creation, the payment method
 *             selection screen will be skipped.
 * @param description - The full name of the payment method, translated in the optional locale passed.
 * @param image - The URLs of images representing the payment method.
 * @param pricing - See {@link IMethodPricing}
 * @param _links - An object with several URL objects relevant to the payment method.
 *
 * @see https://docs.mollie.com/reference/v2/methods-api/get-method
 */

(function (MethodImageSize) {
  MethodImageSize["size1x"] = "size1x";
  MethodImageSize["size2x"] = "size2x";
  MethodImageSize["svg"] = "svg";
})(exports.MethodImageSize || (exports.MethodImageSize = {}));
/**
 * Pricing set of the payment method what will be include if you add the parameter.
 *
 * @param description - The area or product-type where the pricing is applied for, translated in the optional locale passed.
 * @param fixed - The fixed price per transaction
 * @param variable - A string containing the percentage what will be charged over the payment amount besides the fixed price.
 */

(function (MethodInclude) {
  MethodInclude["issuers"] = "issuers";
  MethodInclude["pricing"] = "pricing";
})(exports.MethodInclude || (exports.MethodInclude = {}));

/**
 * The `Method` model
 *
 * {@link IMethod}
 */

class Method extends Model {
  /**
   * Method constructor
   *
   * @public ✓ This method is part of the public API
   */
  constructor(props) {
    super();

    _defineProperty(this, "resource", 'method');

    _defineProperty(this, "id", null);

    _defineProperty(this, "description", null);

    _defineProperty(this, "image", {
      size1x: null,
      size2x: null,
      svg: null
    });

    _defineProperty(this, "_links", {
      self: null,
      documentation: null
    });

    Object.assign(this, props);
    delete this.mode;
  }
  /**
   * Method image URL
   *
   * @param size
   *
   * @returns Url string
   *
   * @since 2.0.0
   * @since 3.0.0 SVG support
   *
   * @public ✓ This method is part of the public API
   */


  getImage(size = exports.MethodImageSize.size2x) {
    switch (size) {
      case '1x':
      case exports.MethodImageSize.size1x:
        return this.image[exports.MethodImageSize.size1x];

      case '2x':
      case exports.MethodImageSize.size2x:
        return this.image[exports.MethodImageSize.size2x];

      case exports.MethodImageSize.svg:
        return this.image[exports.MethodImageSize.svg];

      default:
        return undefined;
    }
  }

}

/**
 * The `methods` resource
 *
 * @since 1.0.0
 */

class MethodsResource extends Resource {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "apiName", 'Methods API');

    _defineProperty(this, "all", this.list);

    _defineProperty(this, "page", this.list);
  }

  get(id, params, cb) {
    // Using callbacks (DEPRECATED SINCE 3.0.0)
    if (typeof params === 'function' || typeof cb === 'function') {
      if (!id) {
        Resource.createApiError('The payment id is invalid', typeof params === 'function' ? params : cb);
      }

      return super.get(id, typeof params === 'function' ? null : params, typeof params === 'function' ? params : cb);
    }

    if (!id) {
      try {
        Resource.createApiError('The payment id is invalid');
      } catch (error) {
        return Promise.reject(error);
      }
    }

    return super.get(id, params, cb);
  }
  /**
   * Retrieve a list of Payment Methods
   *
   * @since 2.0.0
   *
   * @see https://docs.mollie.com/reference/v2/methods-api/list-methods
   *
   * @public ✓ This method is part of the public API
   */


  /**
   * Retrieve a list of Payment Methods
   *
   * @param params - Retrieve Payment Method parameters
   *                 (DEPRECATED SINCE 3.0.0) Can also be a callback function
   * @param cb - (DEPRECATED SINCE 3.0.0) Callback function, can be used instead of the returned `Promise` object
   *
   * @returns A list of found Payment Methods
   *
   * @since 3.0.0
   *
   * @see https://docs.mollie.com/reference/v2/methods-api/list-methods
   *
   * @public ✓ This method is part of the public API
   */
  list(params, cb) {
    var _superprop_callList = (..._args) => super.list(..._args);

    return _asyncToGenerator(function* () {
      // Using callbacks (DEPRECATED SINCE 3.0.0)
      if (typeof params === 'function' || typeof cb === 'function') {
        return _superprop_callList(typeof params === 'function' ? null : params, typeof params === 'function' ? params : cb);
      }

      return _superprop_callList(params, cb);
    })();
  }
  /**
   * @deprecated 2.0.0. This method is not supported by the v2 API.
   */


  create() {
    var _this = this;

    return _asyncToGenerator(function* () {
      throw new NotImplementedError('This method does not exist', _this.apiName);
    })();
  }
  /**
   * @deprecated 2.0.0. This method is not supported by the v2 API.
   */


  update() {
    var _this2 = this;

    return _asyncToGenerator(function* () {
      throw new NotImplementedError('This method does not exist', _this2.apiName);
    })();
  }
  /**
   * @deprecated 2.0.0. This method is not supported by the v2 API.
   */


  cancel() {
    var _this3 = this;

    return _asyncToGenerator(function* () {
      throw new NotImplementedError('This method does not exist', _this3.apiName);
    })();
  }
  /**
   * @deprecated 2.0.0. This method is not supported by the v2 API.
   */


  delete() {
    var _this4 = this;

    return _asyncToGenerator(function* () {
      throw new NotImplementedError('This method does not exist', _this4.apiName);
    })();
  }

}

_defineProperty(MethodsResource, "resource", 'methods');

_defineProperty(MethodsResource, "model", Method);

/**
 * The `refunds` resource
 *
 * @since 2.0.0
 */

class RefundsResource extends Resource {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "apiName", 'Refunds API');

    _defineProperty(this, "all", this.list);

    _defineProperty(this, "page", this.list);
  }

  /**
   * List Refunds
   *
   * @param params - List Refunds parameters
   *                 (DEPRECATED SINCE 3.0.0) Can also be a callback function
   * @param cb - (DEPRECATED SINCE 3.0.0) Callback function, can be used instead of the returned `Promise` object
   *
   * @returns A list of found Refunds
   *
   * @since 3.0.0
   *
   * @see https://docs.mollie.com/reference/v2/refunds-api/list-refunds
   *
   * @public ✓ This method is part of the public API
   */
  list(params, cb) {
    var _superprop_callList = (..._args) => super.list(..._args);

    return _asyncToGenerator(function* () {
      // Using callbacks (DEPRECATED SINCE 3.0.0)
      if (typeof params === 'function' || typeof cb === 'function') {
        return _superprop_callList(typeof params === 'function' ? null : params, typeof params === 'function' ? params : cb);
      }

      return _superprop_callList(params, cb);
    })();
  }
  /**
   * @deprecated 2.0.0. This method is not supported by the v2 API.
   */


  create() {
    var _this = this;

    return _asyncToGenerator(function* () {
      throw new NotImplementedError('This method does not exist', _this.apiName);
    })();
  }
  /**
   * @deprecated 2.0.0. This method is not supported by the v2 API.
   */


  get() {
    var _this2 = this;

    return _asyncToGenerator(function* () {
      throw new NotImplementedError('This method does not exist', _this2.apiName);
    })();
  }
  /**
   * @deprecated 2.0.0. This method is not supported by the v2 API.
   */


  update() {
    var _this3 = this;

    return _asyncToGenerator(function* () {
      throw new NotImplementedError('This method does not exist', _this3.apiName);
    })();
  }
  /**
   * @deprecated 2.0.0. This method is not supported by the v2 API.
   */


  cancel() {
    var _this4 = this;

    return _asyncToGenerator(function* () {
      throw new NotImplementedError('This method does not exist', _this4.apiName);
    })();
  }
  /**
   * @deprecated 2.0.0. This method is not supported by the v2 API.
   */


  delete() {
    var _this5 = this;

    return _asyncToGenerator(function* () {
      throw new NotImplementedError('This method does not exist', _this5.apiName);
    })();
  }

}

_defineProperty(RefundsResource, "resource", 'refunds');

_defineProperty(RefundsResource, "model", Refund);

/**
 * Customers base resource.
 */

class CustomersBaseResource extends Resource {
  /**
   * Set the parent.
   *
   * @since 2.0.0
   *
   * @deprecated 2.2.0 Please use setParentId instead
   */
  setParent(params = {}) {
    if (!params.customerId && !this.hasParentId()) {
      throw new TypeError('Missing parameter "customerId".');
    } else if (params.customerId) {
      this.setParentId(params.customerId);
    }
  }
  /**
   * Set Parent ID
   *
   * @param parentId - Parent resource ID
   *
   * @since 3.0.0
   */


  setParentId(parentId) {
    super.setParentId(parentId);
  }

}

/**
 * The `Customer` model
 *
 * {@link ICustomer}
 */
class Customer extends Model {
  // Access token parameters

  /**
   * Customer constructor
   *
   * @public ✓ This constructor is part of the public API
   */
  constructor(props) {
    super();

    _defineProperty(this, "resource", 'customer');

    _defineProperty(this, "id", null);

    _defineProperty(this, "mode", null);

    _defineProperty(this, "name", null);

    _defineProperty(this, "email", null);

    _defineProperty(this, "locale", null);

    _defineProperty(this, "metadata", null);

    _defineProperty(this, "recentlyUsedMethods", null);

    _defineProperty(this, "createdAt", null);

    _defineProperty(this, "_links", {
      self: null,
      documentation: null,
      mandates: null,
      subscriptions: null,
      payments: null
    });

    _defineProperty(this, "testmode", void 0);

    Object.assign(this, props);
  }

}

_defineProperty(Customer, "resourcePrefix", 'cst_');

/**
 * The `Customers` resource
 */
class CustomersResource extends CustomersBaseResource {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "apiName", 'Customers API');

    _defineProperty(this, "all", this.list);

    _defineProperty(this, "page", this.list);

    _defineProperty(this, "cancel", this.delete);
  }

  /**
   * Creates a simple minimal representation of a customer in the Mollie API
   * to use for the {@link https://www.mollie.com/en/checkout Mollie Checkout}
   * and Recurring features.
   * These customers will appear in your
   * {@link https://www.mollie.com/dashboard/ Mollie Dashboard}
   * where you can manage their details,
   * and also see their payments and subscriptions.
   *
   * @param params - Create customer parameters
   * @param cb - (DEPRECATED SINCE 3.0.0) Callback function, can be used instead of the returned `Promise` object
   *
   * @returns The newly created customer object
   *
   * @since 2.0.0
   *
   * @see https://docs.mollie.com/reference/v2/customers-api/create-customer
   *
   * @public ✓ This method is part of the public API
   */
  create(params, cb) {
    var _superprop_callCreate = (..._args) => super.create(..._args);

    return _asyncToGenerator(function* () {
      return _superprop_callCreate(params, cb);
    })();
  }
  /**
   * Retrieve a single customer by its ID
   *
   * @param id - Customer ID
   * @param params - Retrieve customer parameters
   *                 (DEPRECATED SINCE 3.0.0) Can also be a callback function
   * @param cb - (DEPRECATED SINCE 3.0.0) Callback function, can be used instead of the returned `Promise` object
   *
   * @returns Customer object
   *
   * @since 2.0.0
   *
   * @see https://docs.mollie.com/reference/v2/customers-api/get-customer
   *
   * @public ✓ This method is part of the public API
   */


  get(id, params, cb) {
    var _superprop_callGet = (..._args2) => super.get(..._args2);

    return _asyncToGenerator(function* () {
      // Using callbacks (DEPRECATED SINCE 3.0.0)
      if (typeof params === 'function' || typeof cb === 'function') {
        if (!lodash.startsWith(id, Customer.resourcePrefix)) {
          Resource.createApiError('The customer id is invalid', typeof params === 'function' ? params : cb);
        }

        return _superprop_callGet(id, typeof params === 'function' ? null : params, typeof params === 'function' ? params : cb);
      }

      if (!lodash.startsWith(id, Customer.resourcePrefix)) {
        Resource.createApiError('The customer id is invalid');
      }

      return _superprop_callGet(id, params, cb);
    })();
  }
  /**
   * List customers
   *
   * @param params - List customer parameters
   *                 (DEPRECATED SINCE 3.0.0) Can also be a callback function
   * @param cb - (DEPRECATED SINCE 3.0.0) Callback function, can be used instead of the returned `Promise` object
   *
   * @returns
   *
   * @since 3.0.0
   *
   * @see https://docs.mollie.com/reference/v2/customers-api/list-customers
   *
   * @public ✓ This method is part of the public API
   */


  list(params, cb) {
    var _superprop_callList = (..._args3) => super.list(..._args3);

    return _asyncToGenerator(function* () {
      // Using callbacks (DEPRECATED SINCE 3.0.0)
      if (typeof params === 'function' || typeof cb === 'function') {
        return _superprop_callList(typeof params === 'function' ? null : params, typeof params === 'function' ? params : cb);
      }

      return _superprop_callList(params, cb);
    })();
  }
  /**
   * Update a customer
   *
   * @param id - Customer ID
   * @param params - Update customer parameters
   *                 (DEPRECATED SINCE 3.0.0) Can also be a callback function
   * @param cb - (DEPRECATED SINCE 3.0.0) Callback function, can be used instead of the returned `Promise` object
   *
   * @returns The updated Customer object
   *
   * @since 2.0.0
   *
   * @see https://docs.mollie.com/reference/v2/customers-api/update-customer
   *
   * @public ✓ This method is part of the public API
   */


  update(id, params, cb) {
    var _superprop_callUpdate = (..._args4) => super.update(..._args4);

    return _asyncToGenerator(function* () {
      // Using callbacks (DEPRECATED SINCE 3.0.0)
      if (typeof params === 'function' || typeof cb === 'function') {
        if (!lodash.startsWith(id, Customer.resourcePrefix)) {
          Resource.createApiError('The customer id is invalid', typeof params === 'function' ? params : cb);
        }

        return _superprop_callUpdate(id, typeof params === 'function' ? null : params, typeof params === 'function' ? params : cb);
      }

      if (!lodash.startsWith(id, Customer.resourcePrefix)) {
        Resource.createApiError('The customer id is invalid');
      }

      return _superprop_callUpdate(id, params, cb);
    })();
  }
  /**
   * Delete a customer
   *
   * @param id - Customer ID
   * @param params - Delete customer parameters
   *                 (DEPRECATED SINCE 3.0.0) Can also be a callback function
   * @param cb - (DEPRECATED SINCE 3.0.0) Callback function, can be used instead of the returned `Promise` object
   *
   * @returns Success status
   *
   * @since 2.0.0
   *
   * @see https://docs.mollie.com/reference/v2/customers-api/delete-customer
   *
   * @public ✓ This method is part of the public API
   */


  delete(id, params, cb) {
    var _superprop_callDelete = (..._args5) => super.delete(..._args5);

    return _asyncToGenerator(function* () {
      // Using callbacks (DEPRECATED SINCE 3.0.0)
      if (typeof params === 'function' || typeof cb === 'function') {
        if (!lodash.startsWith(id, Customer.resourcePrefix)) {
          Resource.createApiError('The customer id is invalid', typeof params === 'function' ? params : cb);
        }

        return _superprop_callDelete(id, typeof params === 'function' ? null : params, typeof params === 'function' ? params : cb);
      }

      if (!lodash.startsWith(id, Customer.resourcePrefix)) {
        Resource.createApiError('The customer id is invalid');
      }

      return !!(yield _superprop_callDelete(id, params, cb));
    })();
  }

}

_defineProperty(CustomersResource, "resource", 'customers');

_defineProperty(CustomersResource, "model", Customer);

/**
 * The `customers_payments` resource.
 *
 * @since 1.1.1
 */
class CustomersPaymentsResource extends CustomersBaseResource {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "apiName", 'Customers API (Payments section)');

    _defineProperty(this, "all", this.list);

    _defineProperty(this, "page", this.list);
  }

  /**
   * Create a customer payment.
   *
   * @param params - Create Customer Payment parameters
   * @param cb - (DEPRECATED SINCE 3.0.0) Callback function, can be used instead of the returned `Promise` object
   *
   * @returns The newly created Payment object
   *
   * @since 1.1.1
   *
   * @see https://docs.mollie.com/reference/v2/customers-api/create-customer-payment
   *
   * @public ✓ This method is part of the public API
   */
  create(params, cb) {
    var _this = this,
        _superprop_callCreate = (..._args) => super.create(..._args);

    return _asyncToGenerator(function* () {
      // Using callbacks (DEPRECATED SINCE 3.0.0)
      if (typeof params === 'function' || typeof cb === 'function') {
        const customerId = lodash.get(params, 'customerId') || _this.parentId;

        if (!lodash.startsWith(customerId, Customer.resourcePrefix)) {
          Resource.createApiError('The customer id is invalid', typeof params === 'function' ? params : cb);
        }

        _this.setParentId(customerId);

        return _superprop_callCreate(typeof params === 'function' ? null : params, typeof params === 'function' ? params : cb);
      } // defaults for .withParent() compatibility (DEPRECATED SINCE 3.0.0)


      const _defaults = lodash.defaults(params, {
        customerId: _this.parentId
      }),
            {
        customerId
      } = _defaults,
            parameters = _objectWithoutProperties(_defaults, ["customerId"]);

      _this.setParentId(customerId);

      return _superprop_callCreate(parameters, cb);
    })();
  }
  /**
   * Get all of a customer's payments.
   *
   * @param params - List Customer Payments parameters
   *                 (DEPRECATED SINCE 3.0.0) Can also be a callback function
   * @param cb - (DEPRECATED SINCE 3.0.0) Callback function, can be used instead of the returned `Promise` object
   *
   * @returns A list of found Customer Payments
   *
   * @since 3.0.0
   *
   * @see https://docs.mollie.com/reference/v2/customers-api/list-customer-payments
   *
   * @public ✓ This method is part of the public API
   */


  list(params, cb) {
    var _this2 = this,
        _superprop_callList = (..._args2) => super.list(..._args2);

    return _asyncToGenerator(function* () {
      // Using callbacks (DEPRECATED SINCE 3.0.0)
      if (typeof params === 'function' || typeof cb === 'function') {
        const customerId = lodash.get(params, 'customerId') || _this2.parentId;

        if (!lodash.startsWith(customerId, Customer.resourcePrefix)) {
          Resource.createApiError('The customer id is invalid', typeof params === 'function' ? params : cb);
        }

        _this2.setParentId(customerId);

        return _superprop_callList(typeof params === 'function' ? null : params, typeof params === 'function' ? params : cb);
      } // defaults for .withParent() compatibility (DEPRECATED SINCE 3.0.0)


      const _defaults2 = lodash.defaults(params, {
        customerId: _this2.parentId
      }),
            {
        customerId
      } = _defaults2,
            parameters = _objectWithoutProperties(_defaults2, ["customerId"]);

      if (!lodash.startsWith(customerId, Customer.resourcePrefix)) {
        Resource.createApiError('The customer id is invalid');
      }

      _this2.setParentId(customerId);

      return _superprop_callList(parameters, cb);
    })();
  }
  /**
   * @deprecated 2.0.0. This method is not supported by the v2 API.
   */


  get() {
    var _this3 = this;

    return _asyncToGenerator(function* () {
      throw new NotImplementedError('This method does not exist', _this3.apiName);
    })();
  }
  /**
   * @deprecated 2.0.0. This method is not supported by the v2 API.
   */


  update() {
    var _this4 = this;

    return _asyncToGenerator(function* () {
      throw new NotImplementedError('This method does not exist', _this4.apiName);
    })();
  }
  /**
   * @deprecated 2.0.0. This method is not supported by the v2 API.
   */


  delete() {
    var _this5 = this;

    return _asyncToGenerator(function* () {
      throw new NotImplementedError('This method does not exist', _this5.apiName);
    })();
  }
  /**
   * @deprecated 2.0.0. This method is not supported by the v2 API.
   */


  cancel() {
    var _this6 = this;

    return _asyncToGenerator(function* () {
      throw new NotImplementedError('This method does not exist', _this6.apiName);
    })();
  }

}

_defineProperty(CustomersPaymentsResource, "resource", 'customers_payments');

_defineProperty(CustomersPaymentsResource, "model", Payment);

/**
 * Mandate Response object
 *
 * @see https://docs.mollie.com/reference/v2/mandates-api/get-mandate
 */

(function (MandateMethod) {
  MandateMethod["directdebit"] = "directdebit";
  MandateMethod["creditcard"] = "creditcard";
})(exports.MandateMethod || (exports.MandateMethod = {}));

(function (MandateStatus) {
  MandateStatus["valid"] = "valid";
  MandateStatus["invalid"] = "invalid";
  MandateStatus["pending"] = "pending";
})(exports.MandateStatus || (exports.MandateStatus = {}));

/**
 * The `Mandate` model
 *
 * {@link IMandate}
 */

class Mandate extends Model {
  // Access token parameters

  /**
   * Mandate constructor
   *
   * @public ✓ This constructor is part of the public API
   */
  constructor(props) {
    super();

    _defineProperty(this, "resource", 'mandate');

    _defineProperty(this, "id", null);

    _defineProperty(this, "status", null);

    _defineProperty(this, "method", null);

    _defineProperty(this, "details", null);

    _defineProperty(this, "mode", null);

    _defineProperty(this, "mandateReference", null);

    _defineProperty(this, "signatureDate", null);

    _defineProperty(this, "createdAt", null);

    _defineProperty(this, "_links", {
      self: null,
      documentation: null,
      customer: null
    });

    _defineProperty(this, "testmode", void 0);

    Object.assign(this, props);
  }
  /**
   * If the mandate is valid
   *
   * @public ✓ This method is part of the public API
   */


  isValid() {
    return this.status === exports.MandateStatus.valid;
  }

}

_defineProperty(Mandate, "resourcePrefix", 'mdt_');

/**
 * The `customers_mandates` resource
 *
 * @since 1.2.0
 */
class CustomersMandatesResource extends CustomersBaseResource {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "apiName", 'Mandates API');

    _defineProperty(this, "all", this.list);

    _defineProperty(this, "page", this.list);

    _defineProperty(this, "cancel", this.revoke);

    _defineProperty(this, "delete", this.revoke);
  }

  /**
   * Create a customer mandate
   *
   * @param params Create customer mandate parameters
   * @param cb - (DEPRECATED SINCE 3.0.0) Callback function, can be used instead of the returned `Promise` object
   *
   * @returns
   *
   * @since 1.2.0
   *
   * @see https://docs.mollie.com/reference/v2/mandates-api/create-mandate
   *
   * @public ✓ This method is part of the public API
   */
  create(params, cb) {
    var _this = this,
        _superprop_callCreate = (..._args) => super.create(..._args);

    return _asyncToGenerator(function* () {
      // defaults for .withParent() compatibility (DEPRECATED SINCE 3.0.0)
      const _defaults = lodash.defaults(params, {
        customerId: _this.parentId
      }),
            {
        customerId
      } = _defaults,
            parameters = _objectWithoutProperties(_defaults, ["customerId"]);

      _this.setParentId(customerId);

      return _superprop_callCreate(parameters, cb);
    })();
  }
  /**
   * Get a customer mandate by ID
   *
   * @param id - customers_mandate id
   * @param params - Get customer mandate parameters
   *                 (DEPRECATED SINCE 3.0.0) Can also be a callback function
   * @param cb - (DEPRECATED SINCE 3.0.0) Callback function, can be used instead of the returned `Promise` object
   *
   * @returns Customer mandate
   *
   * @since 1.2.0
   *
   * @see https://docs.mollie.com/reference/v2/mandates-api/get-mandate
   *
   * @public ✓ This method is part of the public API
   */


  get(id, params, cb) {
    var _this2 = this,
        _superprop_callGet = (..._args2) => super.get(..._args2);

    return _asyncToGenerator(function* () {
      // Using callbacks (DEPRECATED SINCE 3.0.0)
      if (typeof params === 'function' || typeof cb === 'function') {
        if (!lodash.startsWith(id, Mandate.resourcePrefix)) {
          Resource.createApiError('The customers_mandate id is invalid', typeof params === 'function' ? params : cb);
        }

        const customerId = lodash.get(params, 'customerId') || _this2.parentId;

        if (!lodash.startsWith(customerId, Customer.resourcePrefix)) {
          Resource.createApiError('The customer id is invalid', typeof params === 'function' ? params : cb);
        }

        _this2.setParentId(customerId);

        return _superprop_callGet(id, typeof params === 'function' ? null : params, typeof params === 'function' ? params : cb);
      } // defaults for .withParent() compatibility (DEPRECATED SINCE 3.0.0)


      const _defaults2 = lodash.defaults(params, {
        customerId: _this2.parentId
      }),
            {
        customerId
      } = _defaults2,
            parameters = _objectWithoutProperties(_defaults2, ["customerId"]);

      if (!lodash.startsWith(id, Mandate.resourcePrefix)) {
        Resource.createApiError('The customers_mandate id is invalid');
      }

      if (!lodash.startsWith(customerId, Customer.resourcePrefix)) {
        Resource.createApiError('The customer id is invalid');
      }

      _this2.setParentId(customerId);

      return _superprop_callGet(id, parameters, cb);
    })();
  }
  /**
   * Get all of a customer's mandates
   *
   * @param params List mandates parameters
   *               (DEPRECATED SINCE 3.0.0) Can also be a callback function
   * @param cb - (DEPRECATED SINCE 3.0.0) Callback function, can be used instead of the returned `Promise` object
   *
   * @returns A list of found mandates
   *
   * @since 3.0.0
   *
   * @see https://docs.mollie.com/reference/v2/mandates-api/list-mandates
   *
   * @public ✓ This method is part of the public API
   */


  list(params, cb) {
    var _this3 = this,
        _superprop_callList = (..._args3) => super.list(..._args3);

    return _asyncToGenerator(function* () {
      // Using callbacks (DEPRECATED SINCE 3.0.0)
      if (typeof params === 'function' || typeof cb === 'function') {
        const customerId = lodash.get(params, 'customerId') || _this3.parentId;

        if (!lodash.startsWith(customerId, Customer.resourcePrefix)) {
          Resource.createApiError('The customer id is invalid', typeof params === 'function' ? params : cb);
        }

        _this3.setParentId(customerId);

        return _superprop_callList(typeof params === 'function' ? null : params, typeof params === 'function' ? params : cb);
      } // defaults for .withParent() compatibility (DEPRECATED SINCE 3.0.0)


      const _defaults3 = lodash.defaults(params, {
        customerId: _this3.parentId
      }),
            {
        customerId
      } = _defaults3,
            parameters = _objectWithoutProperties(_defaults3, ["customerId"]);

      if (!lodash.startsWith(customerId, Customer.resourcePrefix)) {
        Resource.createApiError('The customer id is invalid');
      }

      _this3.setParentId(customerId);

      return _superprop_callList(parameters, cb);
    })();
  }
  /**
   * Delete a customer subscription
   *
   * @param id - customers_mandate id
   * @param params - Delete Customer parameters
   *                 (DEPRECATED SINCE 3.0.0) Can also be a callback function
   * @param cb - Callback function, can be used instead of the returned `Promise` object
   *
   * @returns Success status
   *
   * @since 2.0.0
   *
   * @see https://docs.mollie.com/reference/v2/mandates-api/revoke-mandate
   *
   * @public ✓ This method is part of the public API
   */


  revoke(id, params, cb) {
    var _this4 = this,
        _superprop_callDelete = (..._args4) => super.delete(..._args4);

    return _asyncToGenerator(function* () {
      // Using callbacks (DEPRECATED SINCE 3.0.0)
      if (typeof params === 'function' || typeof cb === 'function') {
        const customerId = lodash.get(params, 'customerId') || _this4.parentId;

        if (!lodash.startsWith(id, Mandate.resourcePrefix)) {
          Resource.createApiError('The customers_mandate id is invalid', typeof params === 'function' ? params : cb);
        }

        if (!lodash.startsWith(customerId, Customer.resourcePrefix)) {
          Resource.createApiError('The customer id is invalid', typeof params === 'function' ? params : cb);
        }

        _this4.setParentId(customerId);

        return _superprop_callDelete(id, typeof params === 'function' ? null : params, typeof params === 'function' ? params : cb);
      } // defaults for .withParent() compatibility (DEPRECATED SINCE 3.0.0)


      const {
        customerId
      } = lodash.defaults(params, {
        customerId: _this4.parentId
      });

      if (!lodash.startsWith(id, Mandate.resourcePrefix)) {
        Resource.createApiError('The customers_mandate id is invalid');
      }

      if (!lodash.startsWith(customerId, Customer.resourcePrefix)) {
        Resource.createApiError('The customer id is invalid');
      }

      _this4.setParentId(customerId);

      return _superprop_callDelete(id, cb);
    })();
  }
  /**
   * @deprecated 2.0.0. This method is not supported by the v2 API.
   */


  update() {
    var _this5 = this;

    return _asyncToGenerator(function* () {
      throw new NotImplementedError('This method does not exist', _this5.apiName);
    })();
  }

}

_defineProperty(CustomersMandatesResource, "resource", 'customers_mandates');

_defineProperty(CustomersMandatesResource, "model", Mandate);

/**
 * Subscription Response object.
 *
 * @see https://docs.mollie.com/reference/v2/subscriptions-api/get-subscription
 */

(function (SubscriptionStatus) {
  SubscriptionStatus["pending"] = "pending";
  SubscriptionStatus["active"] = "active";
  SubscriptionStatus["canceled"] = "canceled";
  SubscriptionStatus["suspended"] = "suspended";
  SubscriptionStatus["completed"] = "completed";
})(exports.SubscriptionStatus || (exports.SubscriptionStatus = {}));

/**
 * The `Subscription` model
 *
 * {@link ISubscription}
 */

class Subscription extends Model {
  // Access token parameters

  /**
   * Subscription constructor
   *
   * @public ✓ This constructor is part of the public API
   */
  constructor(props) {
    super();

    _defineProperty(this, "resource", 'subscription');

    _defineProperty(this, "id", null);

    _defineProperty(this, "mode", null);

    _defineProperty(this, "createdAt", null);

    _defineProperty(this, "status", null);

    _defineProperty(this, "amount", {
      currency: null,
      value: null
    });

    _defineProperty(this, "times", null);

    _defineProperty(this, "interval", null);

    _defineProperty(this, "startDate", null);

    _defineProperty(this, "description", null);

    _defineProperty(this, "method", null);

    _defineProperty(this, "canceledAt", null);

    _defineProperty(this, "webhookUrl", null);

    _defineProperty(this, "timesRemaining", null);

    _defineProperty(this, "metadata", null);

    _defineProperty(this, "_links", {
      self: null,
      documentation: null,
      customer: null
    });

    _defineProperty(this, "mandateId", null);

    _defineProperty(this, "nextPaymentDate", null);

    _defineProperty(this, "testmode", void 0);

    Object.assign(this, props);
  }
  /**
   * Get the webhook url
   *
   * @public ✓ This method is part of the public API
   */


  getWebhookUrl() {
    return this.webhookUrl;
  }
  /**
   * If the subscription is active
   *
   * @public ✓ This method is part of the public API
   */


  isActive() {
    return this.status === exports.SubscriptionStatus.active;
  }
  /**
   * If the subscription is pending
   *
   * @public ✓ This method is part of the public API
   */


  isPending() {
    return this.status === exports.SubscriptionStatus.pending;
  }
  /**
   * If the subscription is completed
   *
   * @public ✓ This method is part of the public API
   */


  isCompleted() {
    return this.status === exports.SubscriptionStatus.completed;
  }
  /**
   * If the subscription is suspended
   *
   * @public ✓ This method is part of the public API
   */


  isSuspended() {
    return this.status === exports.SubscriptionStatus.suspended;
  }
  /**
   * If the subscription is canceled
   *
   * @public ✓ This method is part of the public API
   */


  isCanceled() {
    return exports.SubscriptionStatus.canceled == this.status;
  }

}

_defineProperty(Subscription, "resourcePrefix", 'sub_');

/**
 * The `customers_subscriptions` resource.
 *
 * @since 1.3.2
 */

class CustomersSubscriptionsResource extends CustomersBaseResource {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "apiName", 'Subscriptions API');

    _defineProperty(this, "delete", this.cancel);

    _defineProperty(this, "all", this.list);

    _defineProperty(this, "page", this.list);
  }

  /**
   * Create a customer subscription.
   *
   * @param params - Create Subscription parameters
   *
   * @param cb - (DEPRECATED SINCE 3.0.0) Callback function, can be used instead of the returned `Promise` object
   *
   * @returns Customer Subscription
   *
   * @since 1.3.2
   *
   * @see https://docs.mollie.com/reference/v2/subscriptions-api/create-subscription
   *
   * @public ✓ This method is part of the public API
   */
  create(params, cb) {
    var _this = this,
        _superprop_callCreate = (..._args) => super.create(..._args);

    return _asyncToGenerator(function* () {
      // defaults for .withParent() compatibility (DEPRECATED SINCE 3.0.0)
      const _defaults = lodash.defaults(params, {
        customerId: _this.parentId
      }),
            {
        customerId
      } = _defaults,
            parameters = _objectWithoutProperties(_defaults, ["customerId"]);

      if (!lodash.startsWith(params.customerId, Customer.resourcePrefix)) {
        Resource.createApiError('The customer id is invalid', cb);
      }

      _this.setParentId(customerId);

      return _superprop_callCreate(parameters, cb);
    })();
  }
  /**
   * Get a customer subscription.
   *
   * @param id - Subscription ID
   * @param params - Get Subscription parameters
   *                 (DEPRECATED SINCE 3.0.0) Can also be a callback function
   * @param cb - (DEPRECATED SINCE 3.0.0) Callback function, can be used instead of the returned `Promise` object
   *
   * @return Customer Subscription
   *
   * @since 1.3.2
   *
   * @see https://docs.mollie.com/reference/v2/subscriptions-api/get-subscription
   *
   * @public ✓ This method is part of the public API
   */


  get(id, params, cb) {
    var _this2 = this,
        _superprop_callGet = (..._args2) => super.get(..._args2);

    return _asyncToGenerator(function* () {
      // Using callbacks (DEPRECATED SINCE 3.0.0)
      if (typeof params === 'function' || typeof cb === 'function') {
        const customerId = lodash.get(params, 'customerId') || _this2.parentId;

        if (!lodash.startsWith(id, Subscription.resourcePrefix)) {
          Resource.createApiError('The subscription id is invalid', typeof params === 'function' ? params : cb);
        }

        if (!lodash.startsWith(customerId, Customer.resourcePrefix)) {
          Resource.createApiError('The customer id is invalid', typeof params === 'function' ? params : cb);
        }

        _this2.setParentId(customerId);

        return _superprop_callGet(id, typeof params === 'function' ? null : params, typeof params === 'function' ? params : cb);
      } // defaults for .withParent() compatibility (DEPRECATED SINCE 3.0.0)


      const _defaults2 = lodash.defaults(params, {
        customerId: _this2.parentId
      }),
            {
        customerId
      } = _defaults2,
            parameters = _objectWithoutProperties(_defaults2, ["customerId"]);

      if (!lodash.startsWith(id, Subscription.resourcePrefix)) {
        Resource.createApiError('The subscription id is invalid');
      }

      if (!lodash.startsWith(params.customerId, Customer.resourcePrefix)) {
        Resource.createApiError('The customer id is invalid');
      }

      _this2.setParentId(customerId);

      return _superprop_callGet(id, parameters, cb);
    })();
  }
  /**
   * Get all customer's subscriptions.
   *
   * @param params - List customer's subscriptions parameters
   *                 (DEPRECATED SINCE 3.0.0) Can also be a callback function
   * @param cb - (DEPRECATED SINCE 3.0.0) Callback function, can be used instead of the returned `Promise` object
   *
   * @returns A list of found subscriptions
   *
   * @since 3.0.0
   *
   * @see https://docs.mollie.com/reference/v2/subscriptions-api/list-subscriptions
   *
   * @public ✓ This method is part of the public API
   */


  list(params, cb) {
    var _this3 = this,
        _superprop_callList = (..._args3) => super.list(..._args3);

    return _asyncToGenerator(function* () {
      // Using callbacks (DEPRECATED SINCE 3.0.0)
      if (typeof params === 'function' || typeof cb === 'function') {
        const customerId = lodash.get(params, 'customerId') || _this3.parentId;

        if (!lodash.startsWith(customerId, Customer.resourcePrefix)) {
          Resource.createApiError('The customer id is invalid', cb);
        }

        _this3.setParentId(customerId);

        return _superprop_callList(typeof params === 'function' ? null : params, typeof params === 'function' ? params : cb);
      }

      const _defaults3 = lodash.defaults(params, {
        customerId: _this3.parentId
      }),
            {
        customerId
      } = _defaults3,
            parameters = _objectWithoutProperties(_defaults3, ["customerId"]);

      if (!lodash.startsWith(customerId, Customer.resourcePrefix)) {
        Resource.createApiError('The customer id is invalid', cb);
      }

      _this3.setParentId(customerId);

      return _superprop_callList(parameters, cb);
    })();
  }
  /**
   * Update a customer's subscription.
   *
   * @param id - Subscription ID
   * @param params - Update customer subscription parameters
   *                 (DEPRECATED SINCE 3.0.0) Can also be a callback function
   * @param cb - (DEPRECATED SINCE 3.0.0) Callback function, can be used instead of the returned `Promise` object
   *
   * @returns The updated Customer Subscription object
   *
   * @since 2.0.0
   *
   * @see https://docs.mollie.com/reference/v2/subscriptions-api/update-subscription
   *
   * @public ✓ This method is part of the public API
   */


  update(id, params, cb) {
    var _this4 = this,
        _superprop_callUpdate = (..._args4) => super.update(..._args4);

    return _asyncToGenerator(function* () {
      // Using callbacks (DEPRECATED SINCE 3.0.0)
      if (typeof params === 'function' || typeof cb === 'function') {
        const customerId = lodash.get(params, 'customerId') || _this4.parentId;

        if (!lodash.startsWith(id, Subscription.resourcePrefix)) {
          Resource.createApiError('The subscription id is invalid', typeof params === 'function' ? params : cb);
        }

        if (!lodash.startsWith(customerId, Customer.resourcePrefix)) {
          Resource.createApiError('The customer id is invalid', typeof params === 'function' ? params : cb);
        }

        _this4.setParentId(customerId);

        return _superprop_callUpdate(id, typeof params === 'function' ? null : params, typeof params === 'function' ? params : cb);
      }

      if (!lodash.startsWith(id, Subscription.resourcePrefix)) {
        Resource.createApiError('The subscription id is invalid');
      } // defaults for .withParent() compatibility (DEPRECATED SINCE 3.0.0)


      const _defaults4 = lodash.defaults(params, {
        customerId: _this4.parentId
      }),
            {
        customerId
      } = _defaults4,
            parameters = _objectWithoutProperties(_defaults4, ["customerId"]);

      if (!lodash.startsWith(params.customerId, Customer.resourcePrefix)) {
        Resource.createApiError('The subscription id is invalid');
      }

      _this4.setParentId(customerId);

      return _superprop_callUpdate(id, parameters, cb);
    })();
  }
  /**
   * Cancel a Subscription
   *
   * @param id - Subscription ID
   * @param params - Delete Subscription parameters
   *                 (DEPRECATED SINCE 3.0.0) Can also be a callback function
   * @param cb - (DEPRECATED SINCE 3.0.0) Callback function, can be used instead of the returned `Promise` object
   *
   * @returns Success status
   *
   * @since 1.3.2
   *
   * @see https://docs.mollie.com/reference/v2/subscriptions-api/cancel-subscription
   *
   * @public ✓ This method is part of the public API
   */


  cancel(id, params, cb) {
    var _this5 = this,
        _superprop_callDelete = (..._args5) => super.delete(..._args5);

    return _asyncToGenerator(function* () {
      // Using callbacks (DEPRECATED SINCE 3.0.0)
      if (typeof params === 'function' || typeof cb === 'function') {
        if (!lodash.startsWith(id, Subscription.resourcePrefix)) {
          Resource.createApiError('The subscription id is invalid', typeof params === 'function' ? params : cb);
        }

        const customerId = lodash.get(params, 'customerId') || _this5.parentId;

        if (!lodash.startsWith(customerId, Customer.resourcePrefix)) {
          Resource.createApiError('The customer id is invalid', typeof params === 'function' ? params : cb);
        }

        _this5.setParentId(customerId);

        return _superprop_callDelete(id, typeof params === 'function' ? null : params, typeof params === 'function' ? params : cb);
      }

      if (!lodash.startsWith(id, Subscription.resourcePrefix)) {
        Resource.createApiError('The subscription id is invalid');
      } // defaults for .withParent() compatibility (DEPRECATED SINCE 3.0.0)


      const _defaults5 = lodash.defaults(params, {
        customerId: _this5.parentId
      }),
            {
        customerId
      } = _defaults5,
            parameters = _objectWithoutProperties(_defaults5, ["customerId"]);

      if (!lodash.startsWith(params.customerId, Customer.resourcePrefix)) {
        Resource.createApiError('The customer id is invalid');
      }

      _this5.setParentId(customerId);

      return _superprop_callDelete(id, parameters, cb);
    })();
  }

}

_defineProperty(CustomersSubscriptionsResource, "resource", 'customers_subscriptions');

_defineProperty(CustomersSubscriptionsResource, "model", Subscription);

/**
 * The `chargebacks` resource
 *
 * @since 2.0.0-rc.1
 */

class ChargebacksResource extends Resource {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "apiName", 'Chargebacks API');

    _defineProperty(this, "all", this.list);

    _defineProperty(this, "page", this.list);
  }

  /**
   * List chargebacks
   *
   * @param params - List chargebacks parameters
   *                 (DEPRECATED SINCE 3.0.0) Can also be a callback function
   * @param cb - (DEPRECATED SINCE 3.0.0) Callback function, can be used instead of the returned `Promise` object
   *
   * @returns A list of found Chargebacks
   *
   * @since 3.0.0
   *
   * @see https://docs.mollie.com/reference/v2/chargebacks-api/list-chargebacks
   *
   * @public ✓ This method is part of the public API
   */
  list(params, cb) {
    var _superprop_callList = (..._args) => super.list(..._args);

    return _asyncToGenerator(function* () {
      // Using callbacks (DEPRECATED SINCE 3.0.0)
      if (typeof params === 'function' || typeof cb === 'function') {
        return _superprop_callList(typeof params === 'function' ? null : params, typeof params === 'function' ? params : cb);
      }

      return _superprop_callList(params, cb);
    })();
  }
  /**
   * @deprecated 2.0.0. This method is not supported by the v2 API.
   */


  create() {
    var _this = this;

    return _asyncToGenerator(function* () {
      throw new NotImplementedError('This method does not exist', _this.apiName);
    })();
  }
  /**
   * @deprecated 2.0.0. This method is not supported by the v2 API.
   */


  update(id, data, cb) {
    var _this2 = this;

    return _asyncToGenerator(function* () {
      throw new NotImplementedError('This method does not exist', _this2.apiName);
    })();
  }
  /**
   * @deprecated 2.0.0. This method is not supported by the v2 API.
   */


  get(id, params, cb) {
    var _this3 = this;

    return _asyncToGenerator(function* () {
      throw new NotImplementedError('This method does not exist', _this3.apiName);
    })();
  }
  /**
   * @deprecated 2.0.0. This method is not supported by the v2 API.
   */


  cancel() {
    var _this4 = this;

    return _asyncToGenerator(function* () {
      throw new NotImplementedError('This method does not exist', _this4.apiName);
    })();
  }
  /**
   * @deprecated 2.0.0. This method is not supported by the v2 API.
   */


  delete() {
    var _this5 = this;

    return _asyncToGenerator(function* () {
      throw new NotImplementedError('This method does not exist', _this5.apiName);
    })();
  }

}

_defineProperty(ChargebacksResource, "resource", 'chargebacks');

_defineProperty(ChargebacksResource, "model", Chargeback);

/**
 * The `Shipment` model
 *
 * {@link IShipment}
 */
class Shipment extends Model {
  // Access token parameters

  /**
   * Shipment constructor
   *
   * @public ✓ This constructor is part of the public API
   */
  constructor(props) {
    super();

    _defineProperty(this, "resource", 'shipment');

    _defineProperty(this, "id", null);

    _defineProperty(this, "orderId", null);

    _defineProperty(this, "createdAt", null);

    _defineProperty(this, "tracking", null);

    _defineProperty(this, "lines", null);

    _defineProperty(this, "_links", {
      self: null,
      order: null,
      documentation: null
    });

    _defineProperty(this, "testmode", void 0);

    Object.assign(this, props);
  }

}

_defineProperty(Shipment, "resourcePrefix", 'shp_');

/**
 * Orders base resource
 * @private
 */

class OrdersBaseResource extends Resource {
  /**
   * Set the parent
   * @since 2.0.0
   *
   * @deprecated 2.2.0 Please use setParentId instead
   */
  setParent(params = {}) {
    if (!params.orderId && !this.hasParentId()) {
      throw new TypeError('Missing parameter "orderId".');
    } else if (params.orderId) {
      this.setParentId(params.orderId);
    }
  }

}

/**
 * Order Response object.
 *
 * @see https://docs.mollie.com/reference/v2/orders-api/get-order
 */

(function (OrderStatus) {
  OrderStatus["created"] = "created";
  OrderStatus["paid"] = "paid";
  OrderStatus["authorized"] = "authorized";
  OrderStatus["canceled"] = "canceled";
  OrderStatus["shipping"] = "shipping";
  OrderStatus["completed"] = "completed";
  OrderStatus["expired"] = "expired";
  OrderStatus["pending"] = "pending";
})(exports.OrderStatus || (exports.OrderStatus = {}));

(function (OrderEmbed) {
  OrderEmbed["payments"] = "payments";
})(exports.OrderEmbed || (exports.OrderEmbed = {}));

/**
 * The `Order` model
 *
 * {@link IOrder}
 */
class Order extends Model {
  /**
   * Order constructor
   *
   * @public ✓ This constructor is part of the public API
   */
  constructor(props) {
    super();

    _defineProperty(this, "resource", 'order');

    _defineProperty(this, "id", null);

    _defineProperty(this, "amount", null);

    _defineProperty(this, "profileId", null);

    _defineProperty(this, "createdAt", null);

    _defineProperty(this, "method", null);

    _defineProperty(this, "mode", null);

    _defineProperty(this, "status", null);

    _defineProperty(this, "isCancelable", null);

    _defineProperty(this, "billingAddress", null);

    _defineProperty(this, "orderNumber", null);

    _defineProperty(this, "shippingAddress", null);

    _defineProperty(this, "locale", null);

    _defineProperty(this, "metadata", null);

    _defineProperty(this, "redirectUrl", null);

    _defineProperty(this, "lines", null);

    _defineProperty(this, "_links", {
      self: null,
      documentation: null,
      checkout: null,
      payment: null,
      settlement: null
    });

    _defineProperty(this, "_embedded", null);

    _defineProperty(this, "webhookUrl", void 0);

    _defineProperty(this, "expiresAt", void 0);

    _defineProperty(this, "expiredAt", void 0);

    _defineProperty(this, "paidAt", void 0);

    _defineProperty(this, "authorizedAt", void 0);

    _defineProperty(this, "canceledAt", void 0);

    _defineProperty(this, "completedAt", void 0);

    _defineProperty(this, "amountCaptured", void 0);

    _defineProperty(this, "amountRefunded", void 0);

    _defineProperty(this, "consumerDateOfBirth", void 0);

    Object.assign(this, props);

    if (lodash.isPlainObject(this._embedded)) {
      if (Array.isArray(this._embedded.payments)) {
        this._embedded.payments.forEach((payment, key, payments) => {
          // eslint-disable-next-line no-param-reassign
          payments[key] = new Payment(payment);
        });
      }

      if (Array.isArray(this._embedded.refunds)) {
        this._embedded.refunds.forEach((refund, key, refunds) => {
          // eslint-disable-next-line no-param-reassign
          refunds[key] = new Refund(refund);
        });
      }
    }
  }
  /**
   * Returns whether the order has been created, but nothing else has happened yet.
   *
   * @public ✓ This method is part of the public API
   */


  isCreated() {
    return this.status == exports.OrderStatus.created;
  }
  /**
   * Returns whether the order's payment is successfully completed with a payment method that does not support
   * authorizations.
   *
   * @public ✓ This method is part of the public API
   */


  isPaid() {
    return this.status == exports.OrderStatus.paid;
  }
  /**
   * Returns whether the order's payment is successfully completed with a payment method that does support
   * authorizations. The money will only be transferred once a shipment is created for the order.
   *
   * @public ✓ This method is part of the public API
   */


  isAuthorized() {
    return this.status == exports.OrderStatus.authorized;
  }
  /**
   * Returns whether the order has been canceled.
   *
   * @public ✓ This method is part of the public API
   */


  isCanceled() {
    return this.status == exports.OrderStatus.canceled;
  }
  /**
   * Returns whether the first order line or part of an order line has started shipping. When the order is in this
   * state, it means that your order is partially shipped.
   *
   * @public ✓ This method is part of the public API
   */


  isShipping() {
    return this.status == exports.OrderStatus.shipping;
  }
  /**
   * Returns whether the order has been completed.
   *
   * @public ✓ This method is part of the public API
   */


  isCompleted() {
    return this.status == exports.OrderStatus.completed;
  }
  /**
   * Returns whether the order has expired.
   *
   * @public ✓ This method is part of the public API
   */


  isExpired() {
    return this.status == exports.OrderStatus.expired;
  }
  /**
   * Returns whether the the payment supplier is manually checking the order.
   *
   * @public ✓ This method is part of the public API
   */


  isPending() {
    return this.status == exports.OrderStatus.pending;
  }
  /**
   * Returns the URL your customer should visit to make the payment for the order. This is where you should redirect
   * the customer to after creating the order.
   *
   * As long as the order is still in the `'created'` state, this link can be used by your customer to pay for this
   * order. You can safely share this URL with your customer.
   *
   * Recurring, authorized, paid and finalized orders do not have a checkout URL.
   *
   * @public ✓ This method is part of the public API
   */


  getCheckoutUrl() {
    if (this._links.checkout == undefined) {
      return null;
    }

    return this._links.checkout.href;
  }

}

_defineProperty(Order, "resourcePrefix", 'ord_');

/**
 * The `order_shipments` resource
 *
 * @since 3.0.0
 */

class OrdersShipmentsResource extends OrdersBaseResource {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "apiName", 'Shipments API');

    _defineProperty(this, "all", this.list);

    _defineProperty(this, "page", this.list);
  }

  /**
   * In addition to the
   * {@link https://docs.mollie.com/reference/v2/orders-api/create-order Orders API},
   * the create shipment endpoint can be used to ship order lines.
   *
   * When using Klarna Pay later and Klarna Slice it this is mandatory
   * for the order amount to be captured. An capture will automatically
   * be created for the shipment.
   *
   * The word “shipping” is used in the figurative sense here. It can also
   * mean that a service was provided or digital content was delivered.
   *
   * @param params - Create Shipment parameters
   * @param cb - Callback function, can be used instead of the returned `Promise` object
   *
   * @returns The newly created Shipment object
   *
   * @since 3.0.0
   *
   * @see https://docs.mollie.com/reference/v2/shipments-api/create-shipment
   *
   * @public ✓ This method is part of the public API
   */
  create(params, cb) {
    var _this = this,
        _superprop_callCreate = (..._args) => super.create(..._args);

    return _asyncToGenerator(function* () {
      // Using callbacks (DEPRECATED SINCE 3.0.0)
      if (typeof params === 'function' || typeof cb === 'function') {
        const orderId = lodash.get(params, 'orderId') || _this.parentId;

        if (!lodash.startsWith(orderId, Order.resourcePrefix)) {
          Resource.createApiError('The order id  is invalid', typeof params === 'function' ? params : cb);
        }

        _this.setParentId(orderId);

        return _superprop_callCreate(typeof params === 'function' ? null : params, typeof params === 'function' ? params : cb);
      } // defaults for .withParent() compatibility (DEPRECATED SINCE 3.0.0)


      const _defaults = lodash.defaults(params, {
        orderId: _this.parentId
      }),
            {
        orderId
      } = _defaults,
            parameters = _objectWithoutProperties(_defaults, ["orderId"]);

      if (!lodash.startsWith(orderId, Order.resourcePrefix)) {
        Resource.createApiError('The order id is invalid', typeof params === 'function' ? params : cb);
      }

      _this.setParentId(orderId);

      return _superprop_callCreate(parameters);
    })();
  }
  /**
   * Update a Shipment
   *
   * @param id - Shipment ID
   * @param params - Update Shipment parameters
   * @param cb - Callback function, can be used instead of the returned `Promise` object
   *
   * @returns {Promise<Shipment>}
   *
   * @since 3.0.0
   *
   * @see https://docs.mollie.com/reference/v2/shipments-api/update-shipment
   *
   * @public ✓ This method is part of the public API
   */


  update(id, params, cb) {
    var _this2 = this,
        _superprop_callGet = (..._args2) => super.get(..._args2),
        _superprop_callUpdate = (..._args3) => super.update(..._args3);

    return _asyncToGenerator(function* () {
      // Using callbacks (DEPRECATED SINCE 3.0.0)
      if (typeof params === 'function' || typeof cb === 'function') {
        if (!lodash.startsWith(id, Shipment.resourcePrefix)) {
          Resource.createApiError('The orders_shipments id is invalid', typeof params === 'function' ? params : cb);
        }

        const orderId = lodash.get(params, 'orderId') || _this2.parentId;

        if (!lodash.startsWith(orderId, Order.resourcePrefix)) {
          Resource.createApiError('The order id is invalid', typeof params === 'function' ? params : cb);
        }

        _this2.setParentId(orderId);

        return _superprop_callGet(id, typeof params === 'function' ? null : params, typeof params === 'function' ? params : cb);
      }

      if (!lodash.startsWith(id, Shipment.resourcePrefix)) {
        Resource.createApiError('The orders_shipments id is invalid');
      } // defaults for .withParent() compatibility (DEPRECATED SINCE 3.0.0)


      const _defaults2 = lodash.defaults(params, {
        orderId: _this2.parentId
      }),
            {
        orderId
      } = _defaults2,
            parameters = _objectWithoutProperties(_defaults2, ["orderId"]);

      if (!lodash.startsWith(orderId, Order.resourcePrefix)) {
        Resource.createApiError('The order id is invalid');
      }

      _this2.setParentId(orderId);

      return _superprop_callUpdate(id, parameters);
    })();
  }
  /**
   * Get a Shipment by ID
   *
   * @param id - Shipment ID
   * @param params - Get Shipment parameters
   * @param cb - Callback function, can be used instead of the returned `Promise` object
   *
   * @returns The Shipment object
   *
   * @since 3.0.0
   *
   * @see https://docs.mollie.com/reference/v2/shipments-api/get-shipment
   *
   * @public ✓ This method is part of the public API
   */


  get(id, params, cb) {
    var _this3 = this,
        _superprop_callGet2 = (..._args4) => super.get(..._args4);

    return _asyncToGenerator(function* () {
      // Using callbacks (DEPRECATED SINCE 3.0.0)
      if (typeof params === 'function' || typeof cb === 'function') {
        if (!lodash.startsWith(id, Shipment.resourcePrefix)) {
          Resource.createApiError('The orders_shipments id is invalid', cb);
        }

        const orderId = lodash.get(params, 'orderId') || _this3.parentId;

        if (!lodash.startsWith(orderId, Order.resourcePrefix)) {
          Resource.createApiError('The order id is invalid', typeof params === 'function' ? params : cb);
        }

        _this3.setParentId(orderId);

        return _superprop_callGet2(id, typeof params === 'function' ? null : params, typeof params === 'function' ? params : cb);
      }

      if (!lodash.startsWith(id, Shipment.resourcePrefix)) {
        Resource.createApiError('The orders_shipments id is invalid', cb);
      } // defaults for .withParent() compatibility (DEPRECATED SINCE 3.0.0)


      const _defaults3 = lodash.defaults(params, {
        orderId: _this3.parentId
      }),
            {
        orderId
      } = _defaults3,
            parameters = _objectWithoutProperties(_defaults3, ["orderId"]);

      if (!lodash.startsWith(orderId, Order.resourcePrefix)) {
        Resource.createApiError('The order id is invalid');
      }

      _this3.setParentId(orderId);

      return _superprop_callGet2(id, parameters);
    })();
  }
  /**
   * List order shipments
   *
   * @param params - List Order parameters
   *                 (DEPRECATED SINCE 3.0.0) Can also be a callback function
   * @param cb - (DEPRECATED SINCE 3.0.0) Callback function, can be used instead of the returned `Promise` object
   *
   * @returns A list of found Shipments
   *
   * @since 3.0.0
   *
   * @see https://docs.mollie.com/reference/v2/shipments-api/list-shipments
   *
   * @public ✓ This method is part of the public API
   */


  list(params, cb) {
    var _this4 = this,
        _superprop_callList = (..._args5) => super.list(..._args5);

    return _asyncToGenerator(function* () {
      // Using callbacks (DEPRECATED SINCE 3.0.0)
      if (typeof params === 'function' || typeof cb === 'function') {
        const orderId = lodash.get(params, 'orderId') || _this4.parentId;

        if (!lodash.startsWith(orderId, Order.resourcePrefix)) {
          Resource.createApiError('The order id is invalid', typeof params === 'function' ? params : cb);
        }

        _this4.setParentId(orderId);

        return _superprop_callList(typeof params === 'function' ? null : params, typeof params === 'function' ? params : cb);
      } // defaults for .withParent() compatibility (DEPRECATED SINCE 3.0.0)


      const _defaults4 = lodash.defaults(params, {
        orderId: _this4.parentId
      }),
            {
        orderId
      } = _defaults4,
            parameters = _objectWithoutProperties(_defaults4, ["orderId"]);

      if (!lodash.startsWith(orderId, Order.resourcePrefix)) {
        Resource.createApiError('The order id is invalid', typeof params === 'function' ? params : cb);
      }

      _this4.setParentId(orderId);

      return _superprop_callList(parameters);
    })();
  }
  /**
   * @deprecated 2.0.0. This method is not supported by the v2 API.
   */


  cancel() {
    var _this5 = this;

    return _asyncToGenerator(function* () {
      throw new NotImplementedError('This method does not exist', _this5.apiName);
    })();
  }
  /**
   * @deprecated 2.0.0. This method is not supported by the v2 API.
   */


  delete() {
    var _this6 = this;

    return _asyncToGenerator(function* () {
      throw new NotImplementedError('This method does not exist', _this6.apiName);
    })();
  }

}

_defineProperty(OrdersShipmentsResource, "resource", 'orders_shipments');

_defineProperty(OrdersShipmentsResource, "model", Shipment);

/**
 * The `orders_refunds` resource
 *
 * @since 3.0.0
 */

class OrdersRefundsResource extends OrdersBaseResource {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "apiName", 'Refunds API');

    _defineProperty(this, "all", this.list);

    _defineProperty(this, "page", this.list);
  }

  /**
   * Create an order refund
   *
   * @param params - Create Order Refund parameters
   * @param cb - (DEPRECATED SINCE 3.0.0) Callback function, can be used instead of the returned `Promise` object
   *
   * @returns The newly created Order Refund object
   *
   * @since 3.0.0
   *
   * @see https://docs.mollie.com/reference/v2/orders-api/create-order-refund
   *
   * @public ✓ This method is part of the public API
   */
  create(params, cb) {
    var _this = this,
        _superprop_callCreate = (..._args) => super.create(..._args);

    return _asyncToGenerator(function* () {
      // Using callbacks (DEPRECATED SINCE 3.0.0)
      if (typeof params === 'function' || typeof cb === 'function') {
        const orderId = lodash.get(params, 'orderId') || _this.parentId;

        if (!lodash.startsWith(orderId, Order.resourcePrefix)) {
          Resource.createApiError('The order id is invalid', typeof params === 'function' ? params : cb);
        }

        _this.setParentId(orderId);

        return _superprop_callCreate(typeof params === 'function' ? null : params, typeof params === 'function' ? params : cb);
      } // defaults for .withParent() compatibility (DEPRECATED SINCE 3.0.0)


      const _defaults = lodash.defaults(params, {
        orderId: _this.parentId
      }),
            {
        orderId
      } = _defaults,
            parameters = _objectWithoutProperties(_defaults, ["orderId"]);

      if (!lodash.startsWith(orderId, Order.resourcePrefix)) {
        Resource.createApiError('The order id is invalid', cb);
      }

      _this.setParentId(orderId);

      return _superprop_callCreate(parameters, cb);
    })();
  }
  /**
   * Get all order refunds
   *
   * @param params - List Order Refunds parameters
   *                 (DEPRECATED SINCE 3.0.0) Can also be a callback function
   * @param cb - (DEPRECATED SINCE 3.0.0) Callback function, can be used instead of the returned `Promise` object
   *
   * @returns A list of found Order Refunds
   *
   * @since 3.0.0
   *
   * @see https://docs.mollie.com/reference/v2/orders-api/list-order-refunds
   *
   * @public ✓ This method is part of the public API
   */


  list(params, cb) {
    var _this2 = this,
        _superprop_callList = (..._args2) => super.list(..._args2);

    return _asyncToGenerator(function* () {
      // Using callbacks (DEPRECATED SINCE 3.0.0)
      if (typeof params === 'function' || typeof cb === 'function') {
        const orderId = lodash.get(params, 'orderId') || _this2.parentId;

        if (!orderId) {
          throw new ApiError('Order ID is not set');
        }

        _this2.setParentId(orderId);

        return _superprop_callList(typeof params === 'function' ? null : params, typeof params === 'function' ? params : cb);
      } // defaults for .withParent() compatibility (DEPRECATED SINCE 3.0.0)


      const _defaults2 = lodash.defaults(params, {
        orderId: _this2.parentId
      }),
            {
        orderId
      } = _defaults2,
            parameters = _objectWithoutProperties(_defaults2, ["orderId"]);

      if (!lodash.startsWith(orderId, Order.resourcePrefix)) {
        Resource.createApiError('The order id is invalid');
      }

      _this2.setParentId(orderId);

      return _superprop_callList(parameters, cb);
    })();
  }
  /**
   * @deprecated 2.0.0. This method is not supported by the v2 API.
   */


  get() {
    var _this3 = this;

    return _asyncToGenerator(function* () {
      throw new NotImplementedError('This method does not exist', _this3.apiName);
    })();
  }
  /**
   * @deprecated 2.0.0. This method is not supported by the v2 API.
   */


  update() {
    var _this4 = this;

    return _asyncToGenerator(function* () {
      throw new NotImplementedError('This method does not exist', _this4.apiName);
    })();
  }
  /**
   * @deprecated 2.0.0. This method is not supported by the v2 API.
   */


  delete() {
    var _this5 = this;

    return _asyncToGenerator(function* () {
      throw new NotImplementedError('This method does not exist', _this5.apiName);
    })();
  }
  /**
   * @deprecated 2.0.0. This method is not supported by the v2 API.
   */


  cancel() {
    var _this6 = this;

    return _asyncToGenerator(function* () {
      throw new NotImplementedError('This method does not exist', _this6.apiName);
    })();
  }

}

_defineProperty(OrdersRefundsResource, "resource", 'orders_refunds');

_defineProperty(OrdersRefundsResource, "model", Refund);

/**
 * The `orders` resource
 *
 * @since 3.0.0
 */
class Orders extends Resource {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "apiName", 'Orders API');

    _defineProperty(this, "delete", this.cancel);

    _defineProperty(this, "all", this.list);

    _defineProperty(this, "page", this.list);
  }

  /**
   * Using the Orders API is the preferred approach when integrating
   * the Mollie API into e-commerce applications such as webshops.
   * If you want to use pay after delivery methods such as Klarna Pay later,
   * using the Orders API is mandatory.
   *
   * Creating an order will automatically create the required payment to allow
   * your customer to pay for the order.
   *
   * Once you have created an order, you should redirect your customer to the
   * URL in the _links.checkout property from the response.
   *
   * Note that when the payment fails, expires or is canceled, you can create
   * a new payment using the Create order payment API. This is only possible
   * for orders that have a created status.
   *
   * @param params - Create Order parameters
   * @param cb - (DEPRECATED SINCE 3.0.0) Callback function, can be used instead of
   *             the returned `Promise` object
   *
   * @returns The newly created Order
   *
   * @since 3.0.0
   *
   * @see https://docs.mollie.com/reference/v2/orders-api/create-order
   *
   * @public ✓ This method is part of the public API
   */
  create(params, cb) {
    var _superprop_callCreate = (..._args) => super.create(..._args);

    return _asyncToGenerator(function* () {
      return _superprop_callCreate(params, cb);
    })();
  }
  /**
   * Retrieve an Order.
   *
   * @param id - Order ID
   * @param params - Get Order parameters
   *                 (DEPRECATED SINCE 3.0.0) Can also be a callback function
   * @param cb - (DEPRECATED SINCE 3.0.0) Callback function, can be used instead of the returned `Promise` object
   *
   * @returns The Order
   *
   * @since 3.0.0
   *
   * @see https://docs.mollie.com/reference/v2/orders-api/get-order
   *
   * @public ✓ This method is part of the public API
   */


  get(id, params, cb) {
    var _superprop_callGet = (..._args2) => super.get(..._args2);

    return _asyncToGenerator(function* () {
      // Using callbacks (DEPRECATED SINCE 3.0.0)
      if (typeof params === 'function' || typeof cb === 'function') {
        if (!lodash.startsWith(id, Order.resourcePrefix)) {
          Resource.createApiError('The order id is invalid', typeof params === 'function' ? params : cb);
        }

        return _superprop_callGet(id, typeof params === 'function' ? null : params, typeof params === 'function' ? params : cb);
      }

      if (!lodash.startsWith(id, Order.resourcePrefix)) {
        Resource.createApiError('The order id is invalid');
      }

      return _superprop_callGet(id, params);
    })();
  }
  /**
   * List Orders.
   *
   * @param params - List Order parameters
   *                 (DEPRECATED SINCE 3.0.0) Can also be a callback function
   * @param cb - (DEPRECATED SINCE 3.0.0) Callback function, can be used instead of the returned `Promise` object
   *
   * @returns A list of the Orders found
   *
   * @since 3.0.0
   *
   * @see https://docs.mollie.com/reference/v2/orders-api/list-orders
   *
   * @public ✓ This method is part of the public API
   */


  list(params, cb) {
    var _superprop_callList = (..._args3) => super.list(..._args3);

    return _asyncToGenerator(function* () {
      // Using callbacks (DEPRECATED SINCE 3.0.0)
      if (typeof params === 'function' || typeof cb === 'function') {
        return _superprop_callList(typeof params === 'function' ? null : params, typeof params === 'function' ? params : cb);
      }

      return _superprop_callList(params);
    })();
  }
  /**
   * Update an Order.
   *
   * @param id - Order ID
   * @param params - Update Order parameters
   *               (DEPRECATED SINCE 3.0.0) Can also be a callback function
   * @param cb - (DEPRECATED SINCE 3.0.0) Callback function, can be used instead of the returned `Promise` object
   *
   * @returns The updated Order
   *
   * @since 3.0.0
   *
   * @see https://docs.mollie.com/reference/v2/orders-api/update-order
   *
   * @public ✓ This method is part of the public API
   */


  update(id, params, cb) {
    var _superprop_callUpdate = (..._args4) => super.update(..._args4);

    return _asyncToGenerator(function* () {
      // Using callbacks (DEPRECATED SINCE 3.0.0)
      if (typeof params === 'function' || typeof cb === 'function') {
        if (!lodash.startsWith(id, Order.resourcePrefix)) {
          Resource.createApiError('The order id is invalid', typeof params === 'function' ? params : cb);
        }

        return _superprop_callUpdate(id, typeof params === 'function' ? null : params, typeof params === 'function' ? params : cb);
      }

      if (!lodash.startsWith(id, Order.resourcePrefix)) {
        Resource.createApiError('The order id is invalid', cb);
      }

      return _superprop_callUpdate(id, params);
    })();
  }
  /**
   * Cancel an Order.
   *
   * @param id - Order ID
   * @param params - Cancel Order parameters
   *                 (DEPRECATED SINCE 3.0.0) Can also be a callback function
   * @param cb - (DEPRECATED SINCE 3.0.0) Callback object, can be used instead of the returned `Promise` object
   *
   * @returns Updated Order object
   *
   * @since 3.0.0
   *
   * @see https://docs.mollie.com/reference/v2/orders-api/cancel-order
   *
   * @public ✓ This method is part of the public API
   */


  cancel(id, params, cb) {
    var _superprop_callDelete = (..._args5) => super.delete(..._args5);

    return _asyncToGenerator(function* () {
      if (!lodash.startsWith(id, Order.resourcePrefix)) {
        Resource.createApiError('The order id is invalid', cb);
      } // Using callbacks (DEPRECATED SINCE 3.0.0)


      if (typeof params === 'function' || typeof cb === 'function') {
        return _superprop_callDelete(id, typeof params === 'function' ? null : params, typeof params === 'function' ? params : cb);
      }

      return _superprop_callDelete(id, params);
    })();
  }

}

_defineProperty(Orders, "resource", 'orders');

_defineProperty(Orders, "model", Order);

/**
 * The `OrderLine` model
 *
 * {@link IOrderLine}
 */
class OrderLine extends Model {
  /**
   * OrderLine constructor
   *
   * @public ✓ This constructor is part of the public API
   */
  constructor(props) {
    super();

    _defineProperty(this, "resource", 'orderline');

    _defineProperty(this, "id", null);

    _defineProperty(this, "name", null);

    _defineProperty(this, "quantity", null);

    _defineProperty(this, "unitPrice", null);

    _defineProperty(this, "discountAmount", null);

    _defineProperty(this, "totalAmount", null);

    _defineProperty(this, "vatRate", null);

    _defineProperty(this, "vatAmount", null);

    _defineProperty(this, "sku", null);

    _defineProperty(this, "imageUrl", null);

    _defineProperty(this, "productUrl", null);

    _defineProperty(this, "_links", void 0);

    _defineProperty(this, "orderId", null);

    _defineProperty(this, "type", null);

    _defineProperty(this, "status", null);

    _defineProperty(this, "isCancelable", null);

    _defineProperty(this, "quantityShipped", null);

    _defineProperty(this, "amountShipped", null);

    _defineProperty(this, "quantityRefunded", null);

    _defineProperty(this, "amountRefunded", null);

    _defineProperty(this, "quantityCanceled", null);

    _defineProperty(this, "amountCanceled", null);

    _defineProperty(this, "shippableQuantity", null);

    _defineProperty(this, "refundableQuantity", null);

    _defineProperty(this, "cancelableQuantity", null);

    _defineProperty(this, "createdAt", null);

    _defineProperty(this, "metadata", null);

    Object.assign(this, props);
  }

}

_defineProperty(OrderLine, "resourcePrefix", 'odl_');

/**
 * The `orders_lines` resource
 *
 * @since 3.0.0
 */

class OrdersLinesResource extends OrdersBaseResource {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "apiName", 'Orders API (Order Lines section)');

    _defineProperty(this, "delete", this.cancel);
  }

  /**
   * Update order lines
   *
   * @param id - Order ID
   * @param params - Update order parameters
   *                 (DEPRECATED SINCE 3.0.0) Can also be a callback function
   * @param cb - (DEPRECATED SINCE 3.0.0) Callback function, can be used instead of the returned `Promise` object
   *
   * @returns The updated Order object
   *
   * @since 3.0.0
   *
   * @see https://docs.mollie.com/reference/v2/orders-api/update-orderline
   *
   * @public ✓ This method is part of the public API
   */
  update(id, params, cb) {
    var _this = this,
        _superprop_callUpdate = (..._args) => super.update(..._args);

    return _asyncToGenerator(function* () {
      // Using callbacks (DEPRECATED SINCE 3.0.0)
      if (typeof params === 'function' || typeof cb === 'function') {
        if (!lodash.startsWith(id, Order.resourcePrefix)) {
          Resource.createApiError('The order id is invalid', typeof params === 'function' ? params : cb);
        }

        _this.setParentId(id);

        return _superprop_callUpdate(id, typeof params === 'function' ? null : params, typeof params === 'function' ? params : cb);
      }

      const parameters = _extends({}, params);

      if (!lodash.startsWith(id, Order.resourcePrefix)) {
        Resource.createApiError('The order id is invalid');
      }

      _this.setParentId(id);

      return _superprop_callUpdate(id, parameters);
    })();
  }
  /**
   * Cancel an order line by ID or multiple order lines
   *
   * @param id - Order ID
   * @param params - Cancel order lines parameters
   * @param cb - (DEPRECATED SINCE 3.0.0) Callback function, can be used instead of the returned `Promise` object
   *
   * @returns Success status
   *
   * @since 3.0.0
   *
   * @see https://docs.mollie.com/reference/v2/orders-api/cancel-order-lines
   *
   * @public ✓ This method is part of the public API
   */


  cancel(id, params, cb) {
    var _this2 = this,
        _superprop_callDelete = (..._args2) => super.delete(..._args2);

    return _asyncToGenerator(function* () {
      // Using callbacks (DEPRECATED SINCE 3.0.0)
      if (typeof params === 'function' || typeof cb === 'function') {
        if (!lodash.startsWith(id, Order.resourcePrefix)) {
          Resource.createApiError('The order id is invalid', typeof params === 'function' ? params : cb);
        }

        _this2.setParentId(id);

        return _superprop_callDelete(id, typeof params === 'function' ? null : params, typeof params === 'function' ? params : cb);
      }

      if (!lodash.startsWith(id, Order.resourcePrefix)) {
        Resource.createApiError('The order id is invalid', typeof params === 'function' ? params : cb);
      }

      const parameters = _extends({}, params);

      _this2.setParentId(id);

      return !!(yield _superprop_callDelete(id, parameters, cb));
    })();
  }

}

_defineProperty(OrdersLinesResource, "resource", 'orders_lines');

_defineProperty(OrdersLinesResource, "model", OrderLine);

/**
 * The `Capture` model
 *
 * {@link ICapture}
 */
class Capture extends Model {
  /**
   * Capture constructor
   *
   * @public ✓ This constructor is part of the public API
   */
  constructor(props) {
    super();

    _defineProperty(this, "resource", 'capture');

    _defineProperty(this, "id", null);

    _defineProperty(this, "mode", null);

    _defineProperty(this, "amount", null);

    _defineProperty(this, "settlementAmount", null);

    _defineProperty(this, "paymentId", null);

    _defineProperty(this, "createdAt", null);

    _defineProperty(this, "_links", {
      self: null,
      payment: null,
      shipment: null,
      settlement: null,
      documentation: null
    });

    _defineProperty(this, "shipmentId", null);

    _defineProperty(this, "settlementId", null);

    Object.assign(this, props);
  }

}

_defineProperty(Capture, "resourcePrefix", 'cpt_');

/**
 * The `payments_captures` resource
 *
 * @since 1.1.1
 */
class PaymentsCapturesResource extends PaymentsBaseResource {
  constructor(...args) {
    super(...args);

    _defineProperty(this, "apiName", 'Captures API');

    _defineProperty(this, "all", this.list);

    _defineProperty(this, "page", this.list);
  }

  /**
   * Get a Payment Capture by ID
   *
   * @param id - Capture ID
   * @param params - Get Payment Capture parameters
   * @param cb - (DEPRECATED SINCE 3.0.0) Callback function, can be used instead of the returned `Promise` object
   *
   * @returns The found Payment Capture object
   *
   * @since 1.1.1
   *
   * @see https://docs.mollie.com/reference/v2/captures-api/get-Capture
   *
   * @public ✓ This method is part of the public API
   */
  get(id, params, cb) {
    var _this = this,
        _superprop_callGet = (..._args) => super.get(..._args);

    return _asyncToGenerator(function* () {
      // Using callbacks (DEPRECATED SINCE 3.0.0)
      if (typeof params === 'function' || typeof cb === 'function') {
        if (!lodash.startsWith(id, Capture.resourcePrefix)) {
          Resource.createApiError('The capture id is invalid', typeof params === 'function' ? params : cb);
        }

        const paymentId = lodash.get(params, 'paymentId') || _this.parentId;

        if (!lodash.startsWith(paymentId, Payment.resourcePrefix)) {
          Resource.createApiError('The payment id is invalid', typeof params === 'function' ? params : cb);
        }

        _this.setParentId(paymentId);

        return _superprop_callGet(id, typeof params === 'function' ? null : params, typeof params === 'function' ? params : cb);
      }

      if (!lodash.startsWith(id, Capture.resourcePrefix)) {
        Resource.createApiError('The capture id is invalid');
      } // defaults for .withParent() compatibility (DEPRECATED SINCE 3.0.0)


      const _defaults = lodash.defaults(params, {
        paymentId: _this.parentId
      }),
            {
        paymentId
      } = _defaults,
            parameters = _objectWithoutProperties(_defaults, ["paymentId"]);

      if (!lodash.startsWith(paymentId, Payment.resourcePrefix)) {
        Resource.createApiError('The payment id is invalid');
      }

      _this.setParentId(paymentId);

      return _superprop_callGet(id, parameters, cb);
    })();
  }
  /**
   * Retrieve a list of Payment Captures
   *
   * @param params - Retrieve Payment Captures list parameters
   *                 (DEPRECATED SINCE 3.0.0) Can also be a callback function
   * @param cb - (DEPRECATED SINCE 3.0.0) Callback function, can be used instead of the returned `Promise` object
   *
   * @returns A list of found Payment Captures
   *
   * @since 3.0.0
   *
   * @see https://docs.mollie.com/reference/v2/captures-api/list-captures
   *
   * @public ✓ This method is part of the public API
   */


  list(params, cb) {
    var _this2 = this,
        _superprop_callList = (..._args2) => super.list(..._args2);

    return _asyncToGenerator(function* () {
      // Using callbacks (DEPRECATED SINCE 3.0.0)
      if (typeof params === 'function' || typeof cb === 'function') {
        const paymentId = lodash.get(params, 'paymentId') || _this2.parentId;

        if (!lodash.startsWith(paymentId, Payment.resourcePrefix)) {
          Resource.createApiError('The payment id is invalid', typeof params === 'function' ? params : cb);
        }

        _this2.setParentId(paymentId);

        return _superprop_callList(typeof params === 'function' ? null : params, typeof params === 'function' ? params : cb);
      } // defaults for .withParent() compatibility (DEPRECATED SINCE 3.0.0)


      const _defaults2 = lodash.defaults(params, {
        paymentId: _this2.parentId
      }),
            {
        paymentId
      } = _defaults2,
            parameters = _objectWithoutProperties(_defaults2, ["paymentId"]);

      if (!lodash.startsWith(paymentId, Payment.resourcePrefix)) {
        Resource.createApiError('The payment id is invalid');
      }

      _this2.setParentId(paymentId);

      return _superprop_callList(parameters, cb);
    })();
  }
  /**
   * @deprecated 2.0.0. This method is not supported by the v2 API.
   */


  create() {
    var _this3 = this;

    return _asyncToGenerator(function* () {
      throw new NotImplementedError('This method does not exist', _this3.apiName);
    })();
  }
  /**
   * @deprecated 2.0.0. This method is not supported by the v2 API.
   */


  update() {
    var _this4 = this;

    return _asyncToGenerator(function* () {
      throw new NotImplementedError('This method does not exist', _this4.apiName);
    })();
  }
  /**
   * @deprecated 2.0.0. This method is not supported by the v2 API.
   */


  cancel() {
    var _this5 = this;

    return _asyncToGenerator(function* () {
      throw new NotImplementedError('This method does not exist', _this5.apiName);
    })();
  }
  /**
   * @deprecated 2.0.0. This method is not supported by the v2 API.
   */


  delete() {
    var _this6 = this;

    return _asyncToGenerator(function* () {
      throw new NotImplementedError('This method does not exist', _this6.apiName);
    })();
  }

}

_defineProperty(PaymentsCapturesResource, "resource", 'payments_captures');

_defineProperty(PaymentsCapturesResource, "model", Capture);

/* eslint-disable @typescript-eslint/camelcase */

(function (OrderLineType) {
  OrderLineType["physical"] = "physical";
  OrderLineType["discount"] = "discount";
  OrderLineType["digital"] = "digital";
  OrderLineType["shipping_fee"] = "shipping_fee";
  OrderLineType["store_credit"] = "store_credit";
  OrderLineType["gift_card"] = "gift_card";
  OrderLineType["surcharge"] = "surcharge";
})(exports.OrderLineType || (exports.OrderLineType = {}));

(function (PaymentChargebackEmbed) {
  PaymentChargebackEmbed["payment"] = "payment";
})(exports.PaymentChargebackEmbed || (exports.PaymentChargebackEmbed = {}));

function createHttpClient(options) {
  const axiosOptions = lodash.cloneDeep(options);
  delete axiosOptions.apiKey;
  delete axiosOptions.versionStrings;
  axiosOptions.baseURL = 'https://api.mollie.com:443/v2/';

  if (undefined == axiosOptions.headers) {
    axiosOptions.headers = {};
  }

  axiosOptions.headers['Authorization'] = `Bearer ${options.apiKey}`;
  axiosOptions.headers['Accept-Encoding'] = 'gzip';
  axiosOptions.headers['Content-Type'] = 'application/json';
  var customVersionStrings = options.versionStrings;

  if (undefined == customVersionStrings) {
    customVersionStrings = [];
  } else if (false == Array.isArray(customVersionStrings)) {
    customVersionStrings = [customVersionStrings];
  }

  axiosOptions.headers['User-Agent'] = [`Node/${process.version}`, `Mollie/${version}`, ...customVersionStrings.map(versionString => {
    //                platform /version
    const matches = /^([^\/]+)\/([^\/\s]+)$/.exec(versionString);

    if (null === matches) {
      if (-1 == versionString.indexOf('/') || versionString.indexOf('/') != versionString.lastIndexOf('/')) {
        throw new Error('Invalid version string. It needs to consist of a name and version separated by a forward slash, e.g. RockenbergCommerce/3.1.12');
      } else {
        throw new Error('Invalid version string. The version may not contain any whitespace.');
      }
    } // Replace whitespace in platform name with camelCase (first char stays untouched).


    const platform = matches[1].replace(/([^^])(\b\w)/g, (match, boundary, character) => [boundary, character.toUpperCase()].join('')).replace(/\s+/g, '');
    const version = matches[2];
    return [platform, version].join('/');
  })].join(' ');
  axiosOptions.httpsAgent = new https.Agent({
    cert: fs.readFileSync(path.resolve(__dirname, './cacert.pem'), 'utf8')
  });
  return axios.create(axiosOptions);
}

/**
 * Create Mollie client.
 * @since 2.0.0
 */
function createMollieClient(options) {
  if (!options.apiKey) {
    throw new TypeError('Missing parameter "apiKey".');
  }

  const httpClient = createHttpClient(options);
  return {
    // Payments API
    payments: new PaymentsResource(httpClient),
    // Methods API
    methods: new MethodsResource(httpClient),
    // Refunds API
    payments_refunds: new PaymentsRefundsResource(httpClient),
    refunds: new RefundsResource(httpClient),
    // Chargebacks API
    payments_chargebacks: new PaymentsChargebacksResource(httpClient),
    chargebacks: new ChargebacksResource(httpClient),
    // Captures API
    payments_captures: new PaymentsCapturesResource(httpClient),
    // Customers API
    customers: new CustomersResource(httpClient),
    customers_payments: new CustomersPaymentsResource(httpClient),
    // Mandates API
    customers_mandates: new CustomersMandatesResource(httpClient),
    // Subscriptions API
    customers_subscriptions: new CustomersSubscriptionsResource(httpClient),
    // Orders API
    orders: new Orders(httpClient),
    orders_refunds: new OrdersRefundsResource(httpClient),
    orders_lines: new OrdersLinesResource(httpClient),
    // Shipments API
    orders_shipments: new OrdersShipmentsResource(httpClient)
  };
}

exports.createMollieClient = createMollieClient;
exports.default = createMollieClient;
